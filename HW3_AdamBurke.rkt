#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 74 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 1745 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(6
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname HW3_AdamB"
 #"urke) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 4 #";HW3"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";Adam Burke and Jackie Torres Villolobos"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";Due 10/02/2020"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 1"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"book"
0 0 25 3 2 #" ["
0 0 14 3 5 #"title"
0 0 25 3 1 #" "
0 0 14 3 6 #"author"
0 0 25 3 1 #" "
0 0 14 3 4 #"year"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 100
(7
 #";constructors: (I know these accept arguments but I'm assuming just "
 #"writing the name of the function"
) 0 0 25 29 1 #"\n"
0 0 17 3 99
(8
 #";in parentheses is enough. Let me know if you want me to specify the"
 #" arguments and I'd be happy to."
) 0 0 25 29 1 #"\n"
0 0 17 3 13 #"; (make-book)"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";selectors:"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; (book-title)"
0 0 25 29 1 #"\n"
0 0 17 3 15 #"; (book-author)"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; (book-year)"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";predicates:"
0 0 25 29 1 #"\n"
0 0 17 3 9 #"; (book?)"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";a Book is a (make-book String String Natural)"
0 0 25 29 1 #"\n"
0 0 17 3 91
(9
 #";interp.: a description of a book, including its title author and th"
 #"e year it was published"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"BOOK-HP"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-book"
0 0 25 3 1 #" "
0 0 19 3 39 #"\"Harry Potter and the Sorcerer's Stone\""
0 0 25 3 1 #" "
0 0 19 3 14 #"\"J.K. Rowling\""
0 0 25 3 1 #" "
0 0 22 3 4 #"1998"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"BOOK-BIBLE"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-book"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"The Bible\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"God\""
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"BOOK-COB"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-book"
0 0 25 3 1 #" "
0 0 19 3 23 #"\"The Conquest of Bread\""
0 0 25 3 1 #" "
0 0 19 3 17 #"\"Pyotr Kropotkin\""
0 0 25 3 1 #" "
0 0 22 3 4 #"1884"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";book-templ: Book -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"book-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 10 #"book-title"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"book-author"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"book-year"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"date"
0 0 25 3 2 #" ["
0 0 14 3 3 #"day"
0 0 25 3 1 #" "
0 0 14 3 5 #"month"
0 0 25 3 1 #" "
0 0 14 3 4 #"year"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";constructors:"
0 0 25 29 1 #"\n"
0 0 17 3 13 #"; (make-date)"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";selectors:"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; (date-day)"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; (date-month)"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; (date-year"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";predicates:"
0 0 25 29 1 #"\n"
0 0 17 3 9 #"; (date?)"
0 0 25 29 1 #"\n"
0 0 17 3 96
(10
 #";a Date is a (make-date MonthDay Month Natural) ;This could also be "
 #"Natural String Natural but I"
) 0 0 25 29 1 #"\n"
0 0 17 3 92
(11
 #";thought it should be more restrictive. I'll give brief data definit"
 #"ions for the new types I"
) 0 0 25 29 1 #"\n"
0 0 17 3 95
(12
 #";introduced here below but will skip the template and only provide o"
 #"ne example to keep the code"
) 0 0 25 29 1 #"\n"
0 0 17 3 8 #";simple."
0 0 25 29 1 #"\n"
0 0 17 3 32 #";interp.: A date on the calendar"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"DATE-Y2K-NYD"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"January\""
0 0 25 3 1 #" "
0 0 22 3 4 #"2000"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"DATE-Y2K-NYE"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 2 #"31"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"December\""
0 0 25 3 1 #" "
0 0 22 3 4 #"1999"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"DATE-ELECTION"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"November\""
0 0 25 3 1 #" "
0 0 22 3 4 #"2020"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";date-templ: Date -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"date-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 8 #"date-day"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #") "
0 0 17 3 67
#";I would call (monthday-templ) on this but a MonthDay is a Natural "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"date-month"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #") "
0 0 17 3 66
#";I would call this inside of (month-templ) but a Month is a String"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"date-year"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";A MonthDay is a Natural in the range [1, 31]"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";interp.: A day of the month"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"MD-MOVING"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";A Month is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";- \"January\""
0 0 25 29 1 #"\n"
0 0 17 3 13 #";- \"February\""
0 0 25 29 1 #"\n"
0 0 17 3 10 #";- \"March\""
0 0 25 29 1 #"\n"
0 0 17 3 10 #";- \"April\""
0 0 25 29 1 #"\n"
0 0 17 3 8 #";- \"May\""
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- \"June\""
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- \"July\""
0 0 25 29 1 #"\n"
0 0 17 3 11 #";- \"August\""
0 0 25 29 1 #"\n"
0 0 17 3 14 #";- \"September\""
0 0 25 29 1 #"\n"
0 0 17 3 12 #";- \"October\""
0 0 25 29 1 #"\n"
0 0 17 3 13 #";- \"November\""
0 0 25 29 1 #"\n"
0 0 17 3 13 #";- \"December\""
0 0 25 29 1 #"\n"
0 0 17 3 33 #";interp.: a month on the calendar"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"MONTH-JAN"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"January\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 7 #"holiday"
0 0 25 3 2 #" ["
0 0 14 3 5 #"title"
0 0 25 3 1 #" "
0 0 14 3 4 #"date"
0 0 25 3 1 #" "
0 0 14 3 11 #"is-observed"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";constructors:"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; (make-holiday)"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";selectors:"
0 0 25 29 1 #"\n"
0 0 17 3 17 #"; (holiday-title)"
0 0 25 29 1 #"\n"
0 0 17 3 16 #"; (holiday-date)"
0 0 25 29 1 #"\n"
0 0 17 3 23 #"; (holiday-is-observed)"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";predicates:"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; (holiday?)"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";A Holiday is a (make-holiday String Date Boolean)"
0 0 25 29 1 #"\n"
0 0 17 3 102
(13
 #";interp.: A hoiday's name, date, and whether or not it is observed b"
 #"y the person in question (I think)"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"H-RHS"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-holiday"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"Rosh HaShana\""
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"September\""
0 0 25 3 1 #" "
0 0 22 3 4 #"2020"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"H-XMAS"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-holiday"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Christmas\""
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"December\""
0 0 25 3 1 #" "
0 0 22 3 4 #"1995"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                             "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"H-NHDD"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-holiday"
0 0 25 3 1 #" "
0 0 19 3 22 #"\"National Hot Dog Day\""
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"July\""
0 0 25 3 1 #" "
0 0 22 3 4 #"2015"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                             "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";holiday-templ: Holiday -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"holiday-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 13 #"holiday-title"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"date-templ"
0 0 25 3 2 #" ("
0 0 14 3 12 #"holiday-date"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 19 #"holiday-is-observed"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 2"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"time"
0 0 25 3 2 #" ["
0 0 14 3 4 #"hour"
0 0 25 3 1 #" "
0 0 14 3 6 #"minute"
0 0 25 3 1 #" "
0 0 14 3 3 #"am?"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";A Time is a (make-time Hour Minute Boolean)"
0 0 25 29 1 #"\n"
0 0 17 3 85
(14
 #";I'm assuming it's okay to use Hour and Minute as they were previous"
 #"ly defined on HW2"
) 0 0 25 29 1 #"\n"
0 0 17 3 83
(15
 #";interp.: An hour and minute of the day, as well as whether or not i"
 #"t's in the a.m."
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"T-NOON"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"T-WAKE"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"T-SLEEP"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";time-templ: Time -> ???"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"time-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"time-am?"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";next-minute: Time -> Time"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";produces the next minute in time"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"next-minute"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"next-minute"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"next-minute"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"next-minute"
0 0 25 3 1 #" "
0 0 14 3 6 #"T-WAKE"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"31"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"next-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 17 3 77
(16
 #";I know I didn't use the template but this was simpler since I didn'"
 #"t have to"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 96
(17
 #";keep writing make-time statements. Let me know if you want me to ch"
 #"ange it back to the template"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-time"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 22 3 1 #"1"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                   [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #")])"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 22 3 1 #"0"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 8 #"time-am?"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 8 #"time-am?"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 5 #")])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"CLOCK-HOUR-HAND"
0 1 25 65 1 #"\t"
0 0 25 3 1 #"("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"CLOCK-MINUTE-HAND"
0 0 25 3 2 #" ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"transparent\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"CLOCK-FACE"
0 0 25 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"360DEG"
0 0 25 3 1 #" "
0 0 22 3 3 #"360"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"HOURS-IN-DAY"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"MINUTES-IN-HOUR"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";show-clock: Time -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";uses big-bang to animate a clock starting at the given time t0"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"show-clock"
0 0 25 3 1 #" "
0 0 14 3 2 #"t0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 25 3 1 #" "
0 0 14 3 2 #"t0"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 9 #"draw-time"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 25 3 1 #" "
0 0 14 3 11 #"next-minute"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";draw-time: Time -> Image           "
0 0 25 29 1 #"\n"
0 0 17 3 32 #";draws the given time on a clock"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"draw-time"
0 0 25 3 1 #" "
0 0 14 3 6 #"T-NOON"
0 0 25 3 2 #") "
0 6           4 22 1026
(18
 #"(#(struct:overlay #(struct:translate 77/2 10 #(struct:overlay #(stru"
 #"ct:translate 0 10 #(struct:translate 0 0 #(struct:overlay #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 3 0 0 0) #(struct:pulled-point 0 0 3 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"black\") #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 20 0 0) #(struct:pulled-point 0 0 3 20 0 0) #(struct:pulled-"
 #"point 0 0 3 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) 255 \"trans"
 #"parent\")))) #(struct:translate 1/2 0 #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point 0 0 2 30 0 0) #("
 #"struct:pulled-point 0 0 0 30 0 0)) 255 \"blue\") #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 30 0 0) #(struct:pulled-point 0 0 2 30 0 "
 #"0) #(struct:pulled-point 0 0 2 60 0 0) #(struct:pulled-point 0 0 0 6"
 #"0 0 0)) 255 \"transparent\")))))) #(struct:translate 0 0 #(struct:tr"
 #"anslate 40 40 #(struct:ellipse 80 80 0 outline \"red\")))) #(struct:"
 #"bb 80 80 80) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"draw-time"
0 0 25 3 1 #" "
0 0 14 3 6 #"T-WAKE"
0 0 25 3 2 #") "
0 6           4 22 1357
(19
 #"(#(struct:overlay #(struct:translate 21.929491924311225 10.0 #(struc"
 #"t:overlay #(struct:translate 0 18.700961894323346 #(struct:translate"
 #" 1.4999999999999993 22.59807621135331 #(struct:overlay #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 -1"
 #".4999999999999993 -2.598076211353316 0 0) #(struct:pulled-point 0 0 "
 #"15.820508075688775 -12.598076211353312 0 0) #(struct:pulled-point 0 "
 #"0 17.320508075688775 -9.999999999999996 0 0)) 255 \"black\") #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 17.320508075688775 -9.999999999"
 #"999996 0 0) #(struct:pulled-point 0 0 15.820508075688775 -12.5980762"
 #"11353312 0 0) #(struct:pulled-point 0 0 33.14101615137755 -22.598076"
 #"21135331 0 0) #(struct:pulled-point 0 0 34.64101615137755 -19.999999"
 #"999999993 0 0)) 255 \"transparent\")))) #(struct:translate 17.070508"
 #"075688775 0 #(struct:translate 2 60 #(struct:overlay #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 -2 0"
 #" 0 0) #(struct:pulled-point 0 0 -2 -30 0 0) #(struct:pulled-point 0 "
 #"0 0 -30 0 0)) 255 \"blue\") #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 -30 0 0) #(struct:pulled-point 0 0 -2 -30 0 0) #(struct:pulled"
 #"-point 0 0 -2 -60 0 0) #(struct:pulled-point 0 0 0 -60 0 0)) 255 \"t"
 #"ransparent\")))))) #(struct:translate 0 0 #(struct:translate 40 40 #"
 #"(struct:ellipse 80 80 0 outline \"red\")))) #(struct:bb 80.0 80.0 80"
 #".0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"draw-time"
0 0 25 3 1 #" "
0 0 14 3 7 #"T-SLEEP"
0 0 25 3 1 #")"
0 6           4 22 1334
(20
 #"(#(struct:overlay #(struct:translate 10.0 21.929491924311225 #(struc"
 #"t:overlay #(struct:translate 18.700961894323342 0 #(struct:translate"
 #" -0.0 1.4999999999999998 #(struct:overlay #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 2.5980762113533"
 #"16 -1.4999999999999998 0 0) #(struct:pulled-point 0 0 12.59807621135"
 #"3314 15.820508075688775 0 0) #(struct:pulled-point 0 0 9.99999999999"
 #"9998 17.320508075688775 0 0)) 255 \"black\") #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 9.999999999999998 17.320508075688775 0 0) #(str"
 #"uct:pulled-point 0 0 12.598076211353314 15.820508075688775 0 0) #(st"
 #"ruct:pulled-point 0 0 22.598076211353312 33.14101615137755 0 0) #(st"
 #"ruct:pulled-point 0 0 19.999999999999996 34.64101615137755 0 0)) 255"
 #" \"transparent\")))) #(struct:translate 0 17.070508075688775 #(struc"
 #"t:translate 60 0 #(struct:overlay #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 2 0 0) #(struct:pulle"
 #"d-point 0 0 -30 2 0 0) #(struct:pulled-point 0 0 -30 0 0 0)) 255 \"b"
 #"lue\") #(struct:polygon (#(struct:pulled-point 0 0 -30 0 0 0) #(stru"
 #"ct:pulled-point 0 0 -30 2 0 0) #(struct:pulled-point 0 0 -60 2 0 0) "
 #"#(struct:pulled-point 0 0 -60 0 0 0)) 255 \"transparent\")))))) #(st"
 #"ruct:translate 0 0 #(struct:translate 40 40 #(struct:ellipse 80 80 0"
 #" outline \"red\")))) #(struct:bb 80.0 80.0 80.0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"draw-time"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 25 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 6 #"360DEG"
0 0 25 3 1 #" "
0 0 14 3 12 #"HOURS-IN-DAY"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 14 3 15 #"CLOCK-HOUR-HAND"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 6 #"rotate"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 3 #") ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 6 #"360DEG"
0 0 25 3 1 #" "
0 0 14 3 15 #"MINUTES-IN-HOUR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 14 3 17 #"CLOCK-MINUTE-HAND"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 14 3 10 #"CLOCK-FACE"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 3"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"hotel"
0 0 25 3 2 #" ["
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 5 #"stars"
0 0 25 3 1 #" "
0 0 14 3 5 #"price"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";A Hotel is a (make-hotel String StarRating PriceLevel)"
0 0 25 29 1 #"\n"
0 0 17 3 85
(21
 #";interp.: Information about a hotel including its name, luxury ratin"
 #"g and price level"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-BW"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-hotel"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"Best Western\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-4S"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-hotel"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"4 Seasons\""
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-PM"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-hotel"
0 0 25 3 1 #" "
0 0 19 3 14 #"\"Papa's Motel\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";hotel-templ: Hotel -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"hotel-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 10 #"hotel-name"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"hotel-stars"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 2 #") "
0 0 17 3 70
(22
 #";I would call (starrating-templ) on this but a StarRating is a Natur"
 #"al"
) 0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"hotel-price"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 4 #"))) "
0 0 17 3 70
(23
 #";I would call (pricelevel-templ) on this but a PriceLevel is a Natur"
 #"al"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";A StarRating is a Natural in the range [1,5]"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";interp.: the rating out of 5 stars of a hotel"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"SR-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"SR-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"SR-5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 94
(24
 #";We elected not to write a template since the template would take a "
 #"primitive data type (Real)"
) 0 0 25 29 1 #"\n"
0 0 17 3 85
(25
 #";only in a restricted range. Also, the template would just call the "
 #"input, that's it."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";A PriceLevel is a Natural in the range [1,4]"
0 0 25 29 1 #"\n"
0 0 17 3 78
(26
 #";interp.: a rating out of 4 \"dollar signs\" describing how expensiv"
 #"e a hotel is"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"PL-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"PL-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"PL-4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 94 24 0 0 25 29 1 #"\n"
0 0 17 3 98
(27
 #";only in a restricted range and multiple. Also, the template would j"
 #"ust call the input, that's it."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";in-budget?: Hotel PriceLevel -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 73
(28
 #";is the given hotel in the specified price range (incl. the upper li"
 #"mit)?"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"in-budget?"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-BW"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"in-budget?"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-BW"
0 0 25 3 1 #" "
0 0 14 3 4 #"PL-2"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"in-budget?"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-4S"
0 0 25 3 1 #" "
0 0 14 3 4 #"PL-1"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"in-budget?"
0 0 25 3 1 #" "
0 0 14 3 5 #"hotel"
0 0 25 3 1 #" "
0 0 14 3 11 #"price-limit"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 11 #"hotel-price"
0 0 25 3 1 #" "
0 0 14 3 5 #"hotel"
0 0 25 3 2 #") "
0 0 14 3 11 #"price-limit"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";make-cheaper: Hotel -> Hotel"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";Makes a hotel look cheaper even though it's not"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-cheaper"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-BW"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-hotel"
0 0 25 3 1 #" "
0 0 19 3 22 #"\"Cheaper Best Western\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-cheaper"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-PM"
0 0 25 3 2 #") "
0 0 14 3 4 #"H-PM"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-cheaper"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-4S"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-hotel"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"Cheaper 4 Seasons\""
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-cheaper"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"hotel-price"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"make-hotel"
0 0 25 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"Cheaper \""
0 0 25 3 2 #" ("
0 0 14 3 10 #"hotel-name"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 11 #"hotel-stars"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"hotel-price"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 1 #"h"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"TXT-SIZE"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"TXT-COLOR"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"STAR-SL"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"STAR-COLOR"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 2 #" ("
0 0 14 3 4 #"star"
0 0 25 3 1 #" "
0 0 14 3 7 #"STAR-SL"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #" "
0 0 14 3 10 #"STAR-COLOR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";draw-listing: Hotel -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 73
(29
 #";displays relevant info about the hotel in a style similar to a Yelp"
 #" page"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"draw-listing"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-BW"
0 0 25 3 2 #") "
0 6           4 22 3521
(30
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 8.5 "
 #"14.0 #(struct:text \"B\" 0 1 \"black\" 25 #f swiss normal normal #f)"
 #")) #(struct:translate 17.0 0.0 #(struct:translate 7.0 14.0 #(struct:"
 #"text \"e\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:"
 #"translate 31.0 0.0 #(struct:translate 6.5 14.0 #(struct:text \"s\" 0"
 #" 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:translate 44"
 #".0 0.0 #(struct:translate 3.5 14.0 #(struct:text \"t\" 0 1 \"black\""
 #" 25 #f swiss normal normal #f))))) #(struct:translate 51.0 0.0 #(str"
 #"uct:translate 3.5 14.0 #(struct:text \" \" 0 1 \"black\" 25 #f swiss"
 #" normal normal #f))))) #(struct:translate 58.0 0.0 #(struct:translat"
 #"e 13.0 14.0 #(struct:text \"W\" 0 1 \"black\" 25 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 84.0 0.0 #(struct:translate 7.0 14.0 "
 #"#(struct:text \"e\" 0 1 \"black\" 25 #f swiss normal normal #f))))) "
 #"#(struct:translate 98.0 0.0 #(struct:translate 6.5 14.0 #(struct:tex"
 #"t \"s\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 111.0 0.0 #(struct:translate 3.5 14.0 #(struct:text \"t\" 0 1"
 #" \"black\" 25 #f swiss normal normal #f))))) #(struct:translate 118."
 #"0 0.0 #(struct:translate 7.0 14.0 #(struct:text \"e\" 0 1 \"black\" "
 #"25 #f swiss normal normal #f))))) #(struct:translate 132.0 0.0 #(str"
 #"uct:translate 4.0 14.0 #(struct:text \"r\" 0 1 \"black\" 25 #f swiss"
 #" normal normal #f))))) #(struct:translate 140.0 0.0 #(struct:transla"
 #"te 7.0 14.0 #(struct:text \"n\" 0 1 \"black\" 25 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 28.45898033750315 28.0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 6.180339887498949 30.77683"
 #"5371752533 0 0) #(struct:pulled-point 0 0 32.3606797749979 11.755705"
 #"045849464 0 0) #(struct:pulled-point 0 0 0.0 11.75570504584946 0 0) "
 #"#(struct:pulled-point 0 0 26.18033988749895 30.776835371752533 0 0) "
 #"#(struct:pulled-point 0 0 16.180339887498953 0.0 0 0)) 255 \"red\"))"
 #" #(struct:translate 32.3606797749979 0.0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 6.180339887498949 30.776835371752533 0 0) #(struct:"
 #"pulled-point 0 0 32.3606797749979 11.755705045849464 0 0) #(struct:p"
 #"ulled-point 0 0 0.0 11.75570504584946 0 0) #(struct:pulled-point 0 0"
 #" 26.18033988749895 30.776835371752533 0 0) #(struct:pulled-point 0 0"
 #" 16.180339887498953 0.0 0 0)) 255 \"red\")))) #(struct:translate 64."
 #"7213595499958 0.0 #(struct:polygon (#(struct:pulled-point 0 0 6.1803"
 #"39887498949 30.776835371752533 0 0) #(struct:pulled-point 0 0 32.360"
 #"6797749979 11.755705045849464 0 0) #(struct:pulled-point 0 0 0.0 11."
 #"75570504584946 0 0) #(struct:pulled-point 0 0 26.18033988749895 30.7"
 #"76835371752533 0 0) #(struct:pulled-point 0 0 16.180339887498953 0.0"
 #" 0 0)) 255 \"red\")))))) #(struct:translate 55.0 58.77683537175253 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:translate 11.0 22.5 "
 #"#(struct:text \"$\" 0 1 \"green\" 40 #f swiss normal normal #f))) #("
 #"struct:translate 22.0 0.0 #(struct:translate 11.0 22.5 #(struct:text"
 #" \"$\" 0 1 \"green\" 40 #f swiss normal normal #f)))))) #(struct:bb "
 #"154.0 103.77683537175253 94.77683537175253) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"draw-listing"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-4S"
0 0 25 3 2 #") "
0 6           4 22 4232
(31
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 20.90169943749474 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 7.0 14.0 #(struct:text \"4\" 0 1 \"black"
 #"\" 25 #f swiss normal normal #f))) #(struct:translate 14.0 0.0 #(str"
 #"uct:translate 3.5 14.0 #(struct:text \" \" 0 1 \"black\" 25 #f swiss"
 #" normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:translat"
 #"e 8.5 14.0 #(struct:text \"S\" 0 1 \"black\" 25 #f swiss normal norm"
 #"al #f))))) #(struct:translate 38.0 0.0 #(struct:translate 7.0 14.0 #"
 #"(struct:text \"e\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #"
 #"(struct:translate 52.0 0.0 #(struct:translate 7.0 14.0 #(struct:text"
 #" \"a\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 66.0 0.0 #(struct:translate"
 #" 6.5 14.0 #(struct:text \"s\" 0 1 \"black\" 25 #f swiss normal norma"
 #"l #f))))) #(struct:translate 79.0 0.0 #(struct:translate 7.0 14.0 #("
 #"struct:text \"o\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #("
 #"struct:translate 93.0 0.0 #(struct:translate 7.0 14.0 #(struct:text "
 #"\"n\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:trans"
 #"late 107.0 0.0 #(struct:translate"
 #" 6.5 14.0 #(struct:text \"s\" 0 1 \"black\" 25 #f swiss normal norma"
 #"l #f))))) #(struct:translate 0 28.0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 6.180339887498949 30.77683537175"
 #"2533 0 0) #(struct:pulled-point 0 0 32.3606797749979 11.755705045849"
 #"464 0 0) #(struct:pulled-point 0 0 0.0 11.75570504584946 0 0) #(stru"
 #"ct:pulled-point 0 0 26.18033988749895 30.776835371752533 0 0) #(stru"
 #"ct:pulled-point 0 0 16.180339887498953 0.0 0 0)) 255 \"red\")) #(str"
 #"uct:translate 32.3606797749979 0.0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 6.180339887498949 30.776835371752533 0 0) #(struct:pulled"
 #"-point 0 0 32.3606797749979 11.755705045849464 0 0) #(struct:pulled-"
 #"point 0 0 0.0 11.75570504584946 0 0) #(struct:pulled-point 0 0 26.18"
 #"033988749895 30.776835371752533 0 0) #(struct:pulled-point 0 0 16.18"
 #"0339887498953 0.0 0 0)) 255 \"red\")))) #(struct:translate 64.721359"
 #"5499958 0.0 #(struct:polygon (#(struct:pulled-point 0 0 6.1803398874"
 #"98949 30.776835371752533 0 0) #(struct:pulled-point 0 0 32.360679774"
 #"9979 11.755705045849464 0 0) #(struct:pulled-point 0 0 0.0 11.755705"
 #"04584946 0 0) #(struct:pulled-point 0 0 26.18033988749895 30.7768353"
 #"71752533 0 0) #(struct:pulled-point 0 0 16.180339887498953 0.0 0 0))"
 #" 255 \"red\")))) #(struct:translate 97.0820393249937 0.0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 6.180339887498949 30.77683537175253"
 #"3 0 0) #(struct:pulled-point 0 0 32.3606797749979 11.755705045849464"
 #" 0 0) #(struct:pulled-point 0 0 0.0 11.75570504584946 0 0) #(struct:"
 #"pulled-point 0 0 26.18033988749895 30.776835371752533 0 0) #(struct:"
 #"pulled-point 0 0 16.180339887498953 0.0 0 0)) 255 \"red\")))) #(stru"
 #"ct:translate 129.4427190999916 0.0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 6.180339887498949 30.776835371752533 0 0) #(struct:pulled"
 #"-point 0 0 32.3606797749979 11.755705045849464 0 0) #(struct:pulled-"
 #"point 0 0 0.0 11.75570504584946 0 0) #(struct:pulled-point 0 0 26.18"
 #"033988749895 30.776835371752533 0 0) #(struct:pulled-point 0 0 16.18"
 #"0339887498953 0.0 0 0)) 255 \"red\")))))) #(struct:translate 36.9016"
 #"9943749474 58.77683537175253 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 11.0 22.5 #(struct:text \"$\" 0 1 \""
 #"green\" 40 #f swiss normal normal #f))) #(struct:translate 22.0 0.0 "
 #"#(struct:translate 11.0 22.5 #(struct:text \"$\" 0 1 \"green\" 40 #f"
 #" swiss normal normal #f))))) #(struct:translate 44.0 0.0 #(struct:tr"
 #"anslate 11.0 22.5 #(struct:text \"$\" 0 1 \"green\" 40 #f swiss norm"
 #"al normal #f))))) #(struct:translate 66.0 0.0 #(struct:translate 11."
 #"0 22.5 #(struct:text \"$\" 0 1 \"green\" 40 #f swiss normal normal #"
 #"f)))))) #(struct:bb 161.80339887498948 103.77683537175253 94.7768353"
 #"7175253) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"draw-listing"
0 0 25 3 1 #" "
0 0 14 3 4 #"H-PM"
0 0 25 3 2 #") "
0 6           4 22 2515
(32
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 8.5 "
 #"14.0 #(struct:text \"P\" 0 1 \"black\" 25 #f swiss normal normal #f)"
 #")) #(struct:translate 17.0 0.0 #(struct:translate 7.0 14.0 #(struct:"
 #"text \"a\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:"
 #"translate 31.0 0.0 #(struct:translate 7.0 14.0 #(struct:text \"p\" 0"
 #" 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:translate 45"
 #".0 0.0 #(struct:translate 7.0 14.0 #(struct:text \"a\" 0 1 \"black\""
 #" 25 #f swiss normal normal #f))))) #(struct:translate 59.0 0.0 #(str"
 #"uct:translate 2.5 14.0 #(struct:text \"'\" 0 1 \"black\" 25 #f swiss"
 #" normal normal #f))))) #(struct:translate 64.0 0.0 #(struct:translat"
 #"e 6.5 14.0 #(struct:text \"s\" 0 1 \"black\" 25 #f swiss normal norm"
 #"al #f))))) #(struct:translate 77.0 0.0 #(struct:translate 3.5 14.0 #"
 #"(struct:text \" \" 0 1 \"black\" 25 #f swiss normal normal #f))))) #"
 #"(struct:translate 84.0 0.0 #(struct:translate 10.5 14.0 #(struct:tex"
 #"t \"M\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 105.0 0.0 #(struct:translate 7.0 14.0 #(struct:text \"o\" 0 1"
 #" \"black\" 25 #f swiss normal normal #f))))) #(struct:translate 119."
 #"0 0.0 #(struct:translate 3.5 14.0 #(struct:text \"t\" 0 1 \"black\" "
 #"25 #f swiss normal normal #f))))) #(struct:translate 126.0 0.0 #(str"
 #"uct:translate 7.0 14.0 #(struct:text \"e\" 0 1 \"black\" 25 #f swiss"
 #" normal normal #f))))) #(struct:translate 140.0 0.0 #(struct:transla"
 #"te 3.0 14.0 #(struct:text \"l\" 0 1 \"black\" 25 #f swiss normal nor"
 #"mal #f))))) #(struct:translate 56.819660112501055 28.0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 6.180339887498949 30.776835371752533 "
 #"0 0) #(struct:pulled-point 0 0 32.3606797749979 11.755705045849464 0"
 #" 0) #(struct:pulled-point 0 0 0.0 11.75570504584946 0 0) #(struct:pu"
 #"lled-point 0 0 26.18033988749895 30.776835371752533 0 0) #(struct:pu"
 #"lled-point 0 0 16.180339887498953 0.0 0 0)) 255 \"red\")))) #(struct"
 #":translate 62.0 58.77683537175253 #(struct:translate 11.0 22.5 #(str"
 #"uct:text \"$\" 0 1 \"green\" 40 #f swiss normal normal #f)))) #(stru"
 #"ct:bb 146.0 103.77683537175253 94.77683537175253) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"draw-listing"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 4 #"text"
0 0 25 3 2 #" ("
0 0 14 3 10 #"hotel-name"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 2 #") "
0 0 14 3 8 #"TXT-SIZE"
0 0 25 3 1 #" "
0 0 14 3 9 #"TXT-COLOR"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 10 #"stars->img"
0 0 25 3 2 #" ("
0 0 14 3 11 #"hotel-stars"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 10 #"price->img"
0 0 25 3 2 #" ("
0 0 14 3 11 #"hotel-price"
0 0 25 3 1 #" "
0 0 14 3 1 #"h"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";stars->img: StarRating -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 83
(33
 #";draws the same number of stars as contained in a hotel's rating nex"
 #"t to each other"
) 0 0 25 29 1 #"\n"
0 0 17 3 46 #";How can recursion be used to display n stars?"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"stars->img"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 6           4 22 438
(34
 #"(#(struct:translate 6.180339887498949 30.776835371752533 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"26.18033988749895 -19.02113032590307 0 0) #(struct:pulled-point 0 0 "
 #"-6.180339887498949 -19.021130325903073 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000004 -30.7768353"
 #"71752533 0 0)) 255 \"red\")) #(struct:bb 32.3606797749979 30.7768353"
 #"71752533 30.776835371752533) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"stars->img"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 6           4 22 887
(35
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 6.180339"
 #"887498949 30.776835371752533 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 26.18033988749895 -19.021130"
 #"32590307 0 0) #(struct:pulled-point 0 0 -6.180339887498949 -19.02113"
 #"0325903073 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-"
 #"point 0 0 10.000000000000004 -30.776835371752533 0 0)) 255 \"red\"))"
 #") #(struct:translate 32.3606797749979 0.0 #(struct:translate 6.18033"
 #"9887498949 30.776835371752533 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 26.18033988749895 -19.02113"
 #"032590307 0 0) #(struct:pulled-point 0 0 -6.180339887498949 -19.0211"
 #"30325903073 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled"
 #"-point 0 0 10.000000000000004 -30.776835371752533 0 0)) 255 \"red\")"
 #"))) #(struct:bb 64.7213595499958 30.776835371752533 30.7768353717525"
 #"33) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"stars->img"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 6           4 22 1336
(36
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 6.180339887498949 30.776835371752533"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 26.18033988749895 -19.02113032590307 0 0) #(struct:pulle"
 #"d-point 0 0 -6.180339887498949 -19.021130325903073 0 0) #(struct:pul"
 #"led-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000000000000004"
 #" -30.776835371752533 0 0)) 255 \"red\"))) #(struct:translate 32.3606"
 #"797749979 0.0 #(struct:translate 6.180339887498949 30.77683537175253"
 #"3 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pull"
 #"ed-point 0 0 26.18033988749895 -19.02113032590307 0 0) #(struct:pull"
 #"ed-point 0 0 -6.180339887498949 -19.021130325903073 0 0) #(struct:pu"
 #"lled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00000000000000"
 #"4 -30.776835371752533 0 0)) 255 \"red\"))))) #(struct:translate 64.7"
 #"213595499958 0.0 #(struct:translate 6.180339887498949 30.77683537175"
 #"2533 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 26.18033988749895 -19.02113032590307 0 0) #(struct:p"
 #"ulled-point 0 0 -6.180339887498949 -19.021130325903073 0 0) #(struct"
 #":pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00000000000"
 #"0004 -30.776835371752533 0 0)) 255 \"red\")))) #(struct:bb 97.082039"
 #"3249937 30.776835371752533 30.776835371752533) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"stars->img"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 6           4 22 1786
(37
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 6.180339887498949 30.776835371752533 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 26.1803398874989"
 #"5 -19.02113032590307 0 0) #(struct:pulled-point 0 0 -6.1803398874989"
 #"49 -19.021130325903073 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(st"
 #"ruct:pulled-point 0 0 10.000000000000004 -30.776835371752533 0 0)) 2"
 #"55 \"red\"))) #(struct:translate 32.3606797749979 0.0 #(struct:trans"
 #"late 6.180339887498949 30.776835371752533 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 26.180339887498"
 #"95 -19.02113032590307 0 0) #(struct:pulled-point 0 0 -6.180339887498"
 #"949 -19.021130325903073 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(s"
 #"truct:pulled-point 0 0 10.000000000000004 -30.776835371752533 0 0)) "
 #"255 \"red\"))))) #(struct:translate 64.7213595499958 0.0 #(struct:tr"
 #"anslate 6.180339887498949 30.776835371752533 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 26.180339887"
 #"49895 -19.02113032590307 0 0) #(struct:pulled-point 0 0 -6.180339887"
 #"498949 -19.021130325903073 0 0) #(struct:pulled-point 0 0 20 0 0 0) "
 #"#(struct:pulled-point 0 0 10.000000000000004 -30.776835371752533 0 0"
 #")) 255 \"red\"))))) #(struct:translate 97.0820393249937 0.0 #(struct"
 #":translate 6.180339887498949 30.776835371752533 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 26.180339"
 #"88749895 -19.02113032590307 0 0) #(struct:pulled-point 0 0 -6.180339"
 #"887498949 -19.021130325903073 0 0) #(struct:pulled-point 0 0 20 0 0 "
 #"0) #(struct:pulled-point 0 0 10.000000000000004 -30.776835371752533 "
 #"0 0)) 255 \"red\")))) #(struct:bb 129.4427190999916 30.7768353717525"
 #"33 30.776835371752533) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"stars->img"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 6           4 22 2237
(38
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:translate 6.180339887498949 30.776"
 #"835371752533 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 26.18033988749895 -19.02113032590307 0 0) #("
 #"struct:pulled-point 0 0 -6.180339887498949 -19.021130325903073 0 0) "
 #"#(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.000"
 #"000000000004 -30.776835371752533 0 0)) 255 \"red\"))) #(struct:trans"
 #"late 32.3606797749979 0.0 #(struct:translate 6.180339887498949 30.77"
 #"6835371752533 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 26.18033988749895 -19.02113032590307 0 0) #"
 #"(struct:pulled-point 0 0 -6.180339887498949 -19.021130325903073 0 0)"
 #" #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10.00"
 #"0000000000004 -30.776835371752533 0 0)) 255 \"red\"))))) #(struct:tr"
 #"anslate 64.7213595499958 0.0 #(struct:translate 6.180339887498949 30"
 #".776835371752533 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0"
 #") #(struct:pulled-point 0 0 26.18033988749895 -19.02113032590307 0 0"
 #") #(struct:pulled-point 0 0 -6.180339887498949 -19.021130325903073 0"
 #" 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 10"
 #".000000000000004 -30.776835371752533 0 0)) 255 \"red\"))))) #(struct"
 #":translate 97.0820393249937 0.0 #(struct:translate 6.180339887498949"
 #" 30.776835371752533 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 26.18033988749895 -19.02113032590307 "
 #"0 0) #(struct:pulled-point 0 0 -6.180339887498949 -19.02113032590307"
 #"3 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 10.000000000000004 -30.776835371752533 0 0)) 255 \"red\"))))) #(str"
 #"uct:translate 129.4427190999916 0.0 #(struct:translate 6.18033988749"
 #"8949 30.776835371752533 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 26.18033988749895 -19.02113032590"
 #"307 0 0) #(struct:pulled-point 0 0 -6.180339887498949 -19.0211303259"
 #"03073 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point"
 #" 0 0 10.000000000000004 -30.776835371752533 0 0)) 255 \"red\")))) #("
 #"struct:bb 161.80339887498948 30.776835371752533 30.776835371752533) "
 #"#f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"stars->img"
0 0 25 3 1 #" "
0 0 14 3 5 #"stars"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"stars"
0 0 25 3 2 #") "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 5 #"stars"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 5 #"stars"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 5 #"stars"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 5 #"stars"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 1 #" "
0 0 14 3 4 #"STAR"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 2 #" ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"$\""
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"green"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";price->img: PriceLevel -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 89
(39
 #";draws the same number of dollar as contained in a hotel's price lev"
 #"el next to each other"
) 0 0 25 29 1 #"\n"
0 0 17 3 53 #";How can recursion be used to display n dollar signs?"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 5 #"price"
0 0 17 3 5 #"->img"
0 0 17 3 1 #" "
0 0 17 3 3 #"1) "
0 6           4 17 122
(40
 #"(#(struct:translate 11.0 22.5 #(struct:text \"$\" 0 1 \"green\" 40 #"
 #"f swiss normal normal #f)) #(struct:bb 22.0 45.0 36.0) #f)"
) 0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"price->img"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 2 #") "
0 6           4 17 283
(41
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 11.0 22."
 #"5 #(struct:text \"$\" 0 1 \"green\" 40 #f swiss normal normal #f))) "
 #"#(struct:translate 22.0 0.0 #(struct:translate 11.0 22.5 #(struct:te"
 #"xt \"$\" 0 1 \"green\" 40 #f swiss normal normal #f)))) #(struct:bb "
 #"44.0 45.0 36.0) #f)"
) 0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"price->img"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 2 #") "
0 6           4 17 444
(42
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 11.0 22.5 #(struct:text \"$\" 0 1 \""
 #"green\" 40 #f swiss normal normal #f))) #(struct:translate 22.0 0.0 "
 #"#(struct:translate 11.0 22.5 #(struct:text \"$\" 0 1 \"green\" 40 #f"
 #" swiss normal normal #f))))) #(struct:translate 44.0 0.0 #(struct:tr"
 #"anslate 11.0 22.5 #(struct:text \"$\" 0 1 \"green\" 40 #f swiss norm"
 #"al normal #f)))) #(struct:bb 66.0 45.0 36.0) #f)"
) 0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"price->img"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 2 #") "
0 6           4 17 605
(43
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 11.0 22.5 #(struct:text \"$\" 0 1 \"green\" 40 #f swiss normal n"
 #"ormal #f))) #(struct:translate 22.0 0.0 #(struct:translate 11.0 22.5"
 #" #(struct:text \"$\" 0 1 \"green\" 40 #f swiss normal normal #f)))))"
 #" #(struct:translate 44.0 0.0 #(struct:translate 11.0 22.5 #(struct:t"
 #"ext \"$\" 0 1 \"green\" 40 #f swiss normal normal #f))))) #(struct:t"
 #"ranslate 66.0 0.0 #(struct:translate 11.0 22.5 #(struct:text \"$\" 0"
 #" 1 \"green\" 40 #f swiss normal normal #f)))) #(struct:bb 88.0 45.0 "
 #"36.0) #f)"
) 0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"price->img"
0 0 25 3 1 #" "
0 0 14 3 5 #"price"
0 0 25 3 2 #") "
0 0 17 3 69
(44
 #";not sure why I'm getting halloween code below. I literally wrote th"
 #"e"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 80
(45
 #";check-expects using the function since they're images and enumerate"
 #"d every case"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 5 #"price"
0 0 25 3 2 #") "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 5 #"price"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 5 #"price"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 5 #"price"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 1 #" "
0 0 14 3 11 #"DOLLAR-SIGN"
0 0 25 3 4 #")]))"
0           0
