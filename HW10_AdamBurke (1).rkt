#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 585 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 105 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 23 #"Lucida Sans Typewriter\0"
0.0 12 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 14 #"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 8 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 8 24 #"drscheme:text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 10 #"Monaco CE\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 40 #"framework:syntax-coloring:scheme:symbol\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 40 #"framework:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 42 #"framework:syntax-coloring:scheme:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 45 #"framework:syntax-coloring:scheme:parenthesis\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 39 #"framework:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 39 #"framework:syntax-coloring:scheme:other\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 49 #"drscheme:check-syntax:lexically-bound-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 42 #"drscheme:check-syntax:imported-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 39 #"profj:syntax-coloring:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 40 #"profj:syntax-coloring:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 36 #"profj:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 39 #"profj:syntax-coloring:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-coloring:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 172 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 168 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 167 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 171 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 172 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 167 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 171 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 169 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 173 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 172 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 168 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 167 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 171 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 173 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 170 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 168 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 170 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 173 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 170 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 173 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 169 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 170 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 169 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 0 0 0 0
0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 -1 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 0 -1 161 1 #"\0"
0 70 1 #"\0"
0.6000000000000001 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 0 0 0 0
0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 64 108 0
0 0 -1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
1 -1 161 1 #"\0"
0 70 1 #"\0"
0.8 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 64 108 0
0 0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 1 -1 161 1 #"\0"
0 75 1 #"\0"
0.8 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 1 -1 161 1 #"\0"
0 75 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 0 -1 161 1 #"\0"
0 70 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 36 #"honu:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 40 #"honu:syntax-coloring:scheme:parenthesis\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 35 #"honu:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 36 #"honu:syntax-coloring:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 36 #"honu:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 34 #"honu:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 39 #"honu:syntax-coloring:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 36 #"honu:syntax-coloring:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 -1 90 -1 0 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 25 15 0 0
0 -1 -1 2 30 #"drscheme:check-syntax:keyword\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 25 15 0 0
0 -1 -1 2 39 #"drscheme:check-syntax:unbound-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 37 #"drscheme:check-syntax:bound-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 32 #"drscheme:check-syntax:primitive\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 135 39 0
0 0 -1 -1 2 31 #"drscheme:check-syntax:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 135 39 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 2 32 #"drscheme:check-syntax:tail-call\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 2 27 #"drscheme:check-syntax:base\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 40 25 15 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 135 39 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 90 90 90 3 3 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 90 90 90 3 3 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0 0
0 1 1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0 0
0 1 1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0 0
1 1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 17 90 90 90 90 3 3 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 90 90 90 3 3 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 94 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0 0
0 1 1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 0 1 #"\0"
0 75 6 #"VT100\0"
0.0 12 90 90 90 90 3 3 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 1 0 1 #"\0"
0 75 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0 0
1 1 0 1 #"\0"
0 75 15 #"-adobe-courier\0"
0.0 12 90 90 90 90 3 3 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 19 64 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 35 142 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 133 62 38 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 81 251 0 0
0 1 1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 81 251 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 128 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 165 42 42 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0 0
1 1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 255 0 0 0 0
1 1 0 1 #"\0"
0 70 1 #"\0"
0.0 12 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 0 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0 0
1 1 0 13 #"h-link-style\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0 0
1 1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 0 1 #"\0"
0 70 1 #"\0"
1.0 0 92 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 348 1 #"\0"
1 346 0 1 #"\0"
0 70 1 #"\0"
1.0 -2 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 350 1 #"\0"
1 346 349 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0 0
0 1 1 0 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 93 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 93 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 19 64 0 0
0 1 1 354 1 #"\0"
1 346 347 1 #"\0"
1 346 356 1 #"\0"
0 75 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 356 1 #"\0"
0 75 1 #"\0"
1.0 0 92 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 133 62 38 0 0
0 1 1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 35 142 0 0
0 1 1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0 0
0 1 1 2 1 #"\0"
1 346 363 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 93 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 0 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 49 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 1
1 0 1 #"\0"
0 70 1 #"\0"
1.0 0 90 90 90 90 3 3 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0 0
1 49 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 94 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 0 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 29 #"syntax-coloring:Java:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 28 #"syntax-coloring:Java:string\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 29 #"syntax-coloring:Java:literal\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 105 105 105
0 0 0 -1 -1 2 29 #"syntax-coloring:Java:comment\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 105 105 105
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 27 #"syntax-coloring:Java:error\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 2 32 #"syntax-coloring:Java:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 2 29 #"syntax-coloring:Java:default\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 167 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 170 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monaco CE\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 80 80 248 0
0 0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 90 -1 90 -1 0 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 47 #"drscheme:check-syntax:lexically-bound-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 122 81 203 0
0 0 -1 -1 2 40 #"drscheme:check-syntax:imported-variable\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 122 81 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 51 203 0 0
0 -1 -1 2 45 #"drscheme:check-syntax:lexically-bound-syntax\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 51 203 0 0
0 -1 -1 2 38 #"drscheme:check-syntax:imported-syntax\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 12 90 -1 90 -1 0 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 167 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 70 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 150 0 150
255 255 255 1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 2 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0
1.0 0 0 0 0 0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2000000476837158 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 0 0 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 64 108 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 2 1 #"\0"
0 70 1 #"\0"
0.6000000238418579 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 2 1 #"\0"
0 75 1 #"\0"
0.800000011920929 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 68 64 108 0 0 0 0 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 90 -1 90 -1 0 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monaco CE\0"
0.0 11 90 -1 90 -1 0 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 18 90 -1 90 -1 0 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monaco CE\0"
0.0 12 90 -1 90 -1 0 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 248 20 64 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
1.0 0 -1 -1 -1 -1 2 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monaco CE\0"
0.0 18 90 -1 90 -1 0 -1 0 1 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monaco CE\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 70 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 -1 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 153 0 0 0 0
0 -1 -1 2 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 11 -1 -1 -1 -1 3 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 177 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 180 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 182 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 183 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 186 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 174 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 171 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 -2 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 161 1 #"\0"
0 75 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 161 1 #"\0"
0 70 1 #"\0"
0.75 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 36 36 140 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 0 -1 2 1 #"\0"
0 70 1 #"\0"
0.6000000000000001 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0
1.0 0 0 255 0 0 0 0 -1 2 1 #"\0"
0 75 1 #"\0"
2.0 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
0 75 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 0 -1 161 1 #"\0"
0 75 1 #"\0"
1.0 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 176 48 96 0
0 0 -1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 29 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 8 #"Courier\0"
0.0 37 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 28 #"drscheme:check-syntax:set!d\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 20 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 17 #" Liberation Mono\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 203 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 123 123 0
0 0 -1 -1 2 41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 131 131 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 131 131 0
0 0 -1 -1 2 37 #"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 38 #"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 34 #"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 35 #"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 35 #"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 35 #"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 22 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 9 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 90 -1 3 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 223 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 0 1 #"\0"
0 75 11 #" Monospace\0"
0.0 8 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255 255
255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 220 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 29 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 11 #"Courier CE\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 128 0 0
0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 18 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 27 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 178 34 34
255 255 255 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 23 #"Lucida Sans Typewriter\0"
0.0 16 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 23 #"Lucida Sans Typewriter\0"
0.0 15 90 -1 90 -1 1 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 19 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 119 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 204 204
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 179 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 166 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 32 210 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 255 157 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 167
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 119 112 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 163 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 144 233 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 76 178 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 80 204 0
0 0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 170 151 240
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 191 255 0
0 0 -1 -1           0 21016 0 17 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 25 29 1 #"\n"
0 0 17 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 25 29 1 #"\n"
0 0 27 3 7 #"#reader"
0 0 25 3 1 #"("
0 0 14 3 3 #"lib"
0 0 25 3 1 #" "
0 0 19 3 36 #"\"htdp-intermediate-lambda-reader.ss\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 25 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 25 3 1 #" "
0 0 14 3 20 #"|HW10_AdamBurke (1)|"
0 0 25 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 25 3 6 #" ()) ("
0 0 14 3 13 #"htdp-settings"
0 0 25 3 3 #" #("
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 25 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 14 3 4 #"none"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 4 #" () "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";TO DO"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";- check singature (output) on transform-sexpr-list in ex 3"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";- ex 3 helper check-expects"
0 0 25 29 1 #"\n"
0 0 17 3 65
#";- row clearing doesn't work on an empty base (gen-rand-base 5 1)"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";- abstract sort-base to support col and row sort"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";;CS2500 HW 10"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";11/15/20"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";Adam Burke and Gabby Garcia, ltd."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 2"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";An Atom is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- Number"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- String"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";- Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- Symbol"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";interp.: Atomic data of an SExpr class"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"atom-n"
0 0 25 3 1 #" "
0 0 22 3 2 #"42"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"atom-str"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"atom-b"
0 0 25 3 1 #" "
0 0 22 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"atom-sym"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";atom-templ: Atom -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"atom-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";An SExpr is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 7 #";- Atom"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";- [List-of SExpr]"
0 0 25 29 1 #"\n"
0 0 17 3 87
(6
 #";interp.: An instance of the SExpr class, an SExpr is either an Atom"
 #" or a List of SExpr"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"sexpr-a-1"
0 0 25 3 1 #" "
0 0 14 3 6 #"atom-n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"sexpr-a-2"
0 0 25 3 1 #" "
0 0 14 3 8 #"atom-str"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 9 #"sexpr-a-1"
0 0 25 3 1 #" "
0 0 14 3 9 #"sexpr-a-2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-1"
0 0 25 3 1 #" "
0 0 14 3 9 #"sexpr-a-1"
0 0 25 3 1 #" "
0 0 14 3 9 #"sexpr-a-2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";sexpr-templ: SExpr -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"sexpr-templ"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #")) "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 13 #"losexpr-templ"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 25 29 1 #"\n"
0 0 17 3 29 #";A [List-of SExpr] is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- '()"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";- (cons SExpr [List-of SExpr])"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";interp.: A list of the data SExpr of arbitrary length"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"losexpr-0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"losexpr-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 6 #"atom-n"
0 0 25 3 1 #" "
0 0 14 3 9 #"losexpr-0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"losexpr-2-nested"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 9 #"losexpr-1"
0 0 25 3 1 #" "
0 0 14 3 9 #"losexpr-0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";losexpr-templ: [List-of SExpr] -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"losexpr-templ"
0 0 25 3 1 #" "
0 0 14 3 7 #"losexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 7 #"losexpr"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 7 #"losexpr"
0 0 25 3 3 #") ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 11 #"sexpr-templ"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 7 #"losexpr"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 13 #"losexpr-templ"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 7 #"losexpr"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";Instead of defining these locally over and over again"
0 0 25 29 1 #"\n"
0 0 17 3 79
(7
 #";I've elected to write some useful functions for SExpr's here for re"
 #"use's sake:"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";atom?: Any -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";is the given data _d_ an Atom?"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 3 #") ("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 3 #") ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 3 #") ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";print-sexpr: SExpr -> String"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";prints the given SExpr under the following rules:"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";- Numbers are rendered using number->string"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";   - example: 42 -> \"42\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 1 #" "
0 0 22 3 2 #"42"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"42\""
0 0 25 3 2 #") "
0 0 17 3 10 #";example A"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";- Strings are rendered themselves, surrounded by double quotes"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";   - example: \"hi\" -> \"hi\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 17 3 10 #";example B"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";- Booleans are rendered as #true or #false"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";   - example: #true -> \"#true\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 1 #" "
0 0 22 3 5 #"#true"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"#true\""
0 0 25 3 2 #") "
0 0 17 3 11 #";example C "
0 0 25 29 1 #"\n"
0 0 17 3 77
(8
 #";- Symbols are rendered using symbol->string, and preceded by a sing"
 #"le quote:"
) 0 0 25 29 1 #"\n"
0 0 17 3 25 #";   - example: 'a -> \"'a\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"'a\""
0 0 25 3 2 #") "
0 0 17 3 11 #";example D "
0 0 25 29 1 #"\n"
0 0 17 3 97
(9
 #";- Lists are rendered using the string \"(list\", followed by a spac"
 #"e-separated string og rendering"
) 0 0 25 29 1 #"\n"
0 0 17 3 42 #";  expressions, followed by a closing \")\"."
0 0 25 29 1 #"\n"
0 0 17 3 30 #";   - example: '() -> \"(list)\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 19 3 8 #"\"(list)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";   - example: (list 42) -> \"(list 42)\""
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"42"
0 0 25 3 3 #")) "
0 0 19 3 11 #"\"(list 42)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 101
(10
 #";   - example: (list (list 42 \"hi\" (list #true 'a)) 42) -> \"(list"
 #" (list 42 \"hi\" (list #true 'a)) 42)\""
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"42"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 5 #"#true"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 22 3 2 #"42"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 19 3 40 #"\"(list (list 42 hi (list #true 'a)) 42)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"z"
0 0 25 3 2 #") "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 19 3 3 #"\"d\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 43 #"                                           "
0 0 22 3 5 #"#true"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 19 3 83
(11
 #"\"(list 1 2 (list 3 a b (list c #true (list #false 'x 'y (list 'z) 4"
 #") d) #true) 'w)\""
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"atom->string"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 17 3 16 #";;Atom -> String"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 14 #"number->string"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")] "
0 0 17 3 10 #";example A"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 1 #"a"
0 0 25 3 2 #"] "
0 0 17 3 10 #";example B"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 15 #"boolean->string"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")] "
0 0 17 3 10 #";example C"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"'\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 7 #"))]))] "
0 0 17 3 10 #";example D"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 4 #")) ("
0 0 14 3 12 #"atom->string"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"(list\""
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 6 #"))])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";print-sexpr-list: [List-of SExpr] -> String"
0 0 25 29 1 #"\n"
0 0 17 3 78
(12
 #";prints a single [List-of SExpr] by the rules in print-sexpr (see pr"
 #"int-sexpr)"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"42"
0 0 25 3 3 #")) "
0 0 19 3 6 #"\" 42)\""
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 3 #")) "
0 0 19 3 6 #"\" hi)\""
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 5 #"#true"
0 0 25 3 3 #")) "
0 0 19 3 9 #"\" #true)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 19 3 6 #"\" 'a)\""
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"42"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 5 #"#true"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 22 3 2 #"42"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 19 3 35 #"\" (list 42 hi (list #true 'a)) 42)\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"z"
0 0 25 3 2 #") "
0 0 22 3 1 #"4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                                "
0 0 19 3 3 #"\"d\""
0 0 25 3 2 #") "
0 0 22 3 5 #"#true"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"w"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 19 3 78
(13
 #"\" 1 2 (list 3 a b (list c #true (list #false 'x 'y (list 'z) 4) d) "
 #"#true) 'w)\""
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"print-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-sexpr"
0 0 25 3 1 #" "
0 0 14 3 5 #"first"
0 0 25 3 2 #") "
0 0 14 3 4 #"rest"
0 0 25 3 3 #")) "
0 0 19 3 3 #"\")\""
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 3"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";A [Wide-tree X] is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 4 #";- X"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";- [List-of [Wide-tree X]]"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-num-0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-num-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-num-0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-num-2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-num-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-num-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-sym-0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-sym-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-sym-0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-sym-2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-sym-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"d"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-lst-0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-lst-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-lst-0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-fun-0"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-fun-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-fun-0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-fun-0"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 8 #"wt-fun-0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 4 #")) ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"+"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";wt-templ: (X) [Wide-tree X] [X -> Boolean] -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"wt-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"wt"
0 0 25 3 1 #" "
0 0 14 3 2 #"x?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 2 #"x?"
0 0 25 3 1 #" "
0 0 14 3 2 #"wt"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 2 #"] "
0 0 17 3 68
#";;assuming X is atomic, otherwise call the appropriate x-templ on wt"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 2 #"wt"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lo-wt-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"wt"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";lo-wt-templ: (X) [List-of [Wide-tree X]] [X -> Boolean] -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lo-wt-templ"
0 0 25 3 1 #" "
0 0 14 3 5 #"lo-wt"
0 0 25 3 1 #" "
0 0 14 3 2 #"x?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 5 #"lo-wt"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 5 #"lo-wt"
0 0 25 3 3 #") ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 8 #"wt-templ"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 5 #"lo-wt"
0 0 25 3 2 #") "
0 0 14 3 2 #"x?"
0 0 25 3 2 #") "
0 0 17 3 18 #";; a [Wide-tree X]"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 11 #"lo-wt-templ"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 5 #"lo-wt"
0 0 25 3 2 #") "
0 0 14 3 2 #"x?"
0 0 25 3 6 #"))])) "
0 0 17 3 28 #";; a [List-of [Wide-tree X]]"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 95
(14
 #";sexpr-map: (X) SExpr [Number -> X] [String -> X] [Boolean -> X] [Sy"
 #"mbol -> X] -> [Wide-tree X]"
) 0 0 25 29 1 #"\n"
0 0 17 3 95
(15
 #";produces a Wide-tree where all of the elements of the given SExpr h"
 #"ave been transformed by the"
) 0 0 25 29 1 #"\n"
0 0 17 3 54 #";appropriate function to handle each atomic input type"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sexpr-map"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-2"
0 0 25 3 1 #" "
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 13 #"string-length"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"43"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 2 #"43"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 17 3 41 #";; X: Number        ;trivial     ;trivial"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sexpr-map"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-2"
0 0 25 3 1 #" "
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #")) "
0 0 17 3 13 #";; X: Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sexpr-map"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 17 3 13 #";; X: Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sexpr-map"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"z"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                         "
0 0 17 3 28 #"; Number -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 3 #"sqr"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                         "
0 0 17 3 28 #"; String -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"str"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-length"
0 0 25 3 1 #" "
0 0 14 3 3 #"str"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                         "
0 0 17 3 29 #"; Boolean -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 4 #"bool"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                         "
0 0 17 3 28 #"; Symbol -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-length"
0 0 25 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 5 #")))) "
0 0 17 3 22 #";; X: [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sexpr-map"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #" "
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"sym->x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"map-atom"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 17 3 12 #";; Atom -> X"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 6 #"sym->x"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 5 #")]))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 8 #"map-atom"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #" "
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"sym->x"
0 0 25 3 5 #")])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 95
(16
 #";transform-sexpr-list: [List-of SExpr] [Number -> X] [String -> X] ["
 #"Boolean -> X] [Symbol -> X]"
) 0 0 25 29 1 #"\n"
0 0 17 3 39 #";                      -> [Wide-tree X]"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #" "
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"sym->x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"()]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sexpr-map"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 2 #") "
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"sym->x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 2 #") "
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"sym->x"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-2"
0 0 25 3 1 #" "
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 13 #"string-length"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"43"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 2 #"43"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #")) "
0 0 17 3 41 #";; X: Number        ;trivial     ;trivial"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-2"
0 0 25 3 1 #" "
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #")) "
0 0 17 3 13 #";; X: Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 3 #")) "
0 0 17 3 13 #";; X: Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"z"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 17 3 28 #"; Number -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 3 #"sqr"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 17 3 28 #"; String -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"str"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-length"
0 0 25 3 1 #" "
0 0 14 3 3 #"str"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 17 3 29 #"; Boolean -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 4 #"bool"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 1 #" "
0 0 14 3 4 #"bool"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 17 3 28 #"; Symbol -> [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 25 3 3 #") ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"index"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-length"
0 0 25 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 25 3 1 #" "
0 0 14 3 3 #"sym"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 5 #")))) "
0 0 17 3 22 #";; X: [List-of Number]"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 25 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 16 #"())             "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"transform-sexpr-list"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #" "
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"sym->x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sexpr-map"
0 0 25 3 1 #" "
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 6 #"num->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"str->x"
0 0 25 3 1 #" "
0 0 14 3 7 #"bool->x"
0 0 25 3 1 #" "
0 0 14 3 6 #"sym->x"
0 0 25 3 2 #") "
0 0 14 3 4 #"rest"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 4"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";all-numbers?: SExpr -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";is every Atom in the given SExpr a Number?"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 6 #"))))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 6 #"))))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 7 #")))))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 7 #")))))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"Q"
0 0 25 3 7 #")))))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";all-numbers-in-sexpr-list?: [List-of SExpr] -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 93
(17
 #";are all of the elements in a [List-of SExpr] numbers? Is this true "
 #"for each sublist as well?"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 6 #"))))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 6 #"))))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"y"
0 0 25 29 1 #"\n"
0 0 25 3 49 #"                                                ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"z"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 29 1 #"\n"
0 0 25 3 55 #"                                                      ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"c\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 7 #")))))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 29 1 #"\n"
0 0 25 3 49 #"                                                ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 7 #")))))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 29 1 #"\n"
0 0 25 3 49 #"                                                ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"Q"
0 0 25 3 7 #")))))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 3 #")) "
0 0 17 3 19 #";; SExpr -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 7 #")))])) "
0 0 17 3 29 #";; [List-of SExpr] -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 26 #"all-numbers-in-sexpr-list?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 12 #"all-numbers?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #")) "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 5"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";all-hi?: SExpr -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 57
#";are all of the Atoms in the given SExpr the string \"hi\"?"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 1 #" "
0 0 14 3 12 #"sexpr-list-1"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 4 #"\"hi\""
0 0 25 3 2 #") "
0 0 19 3 8 #"\"not hi\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"=hi?"
0 0 25 3 1 #" "
0 0 14 3 3 #"str"
0 0 25 3 2 #") "
0 0 17 3 20 #";; String -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"hi\""
0 0 25 3 1 #" "
0 0 14 3 3 #"str"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 7 #"string?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 4 #"=hi?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 12 #"all-hi-list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 5 #")])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";all-hi-list?: [List-of SExpr] -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 67
(18
 #";are all of the atoms in the given [List-of SExpr] the string \"hi\""
 #"?"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"all-hi-list?"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 7 #"all-hi?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #")) "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";all-pass-test?: (X) [X -> Boolean] SExpr -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 77
(19
 #";Does every Atom in the given SExpr return #t for the predicate _ato"
 #"m->bool_?"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"all-pass-test?"
0 0 25 3 1 #" "
0 0 14 3 10 #"atom->bool"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"atom?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 10 #"atom->bool"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 19 #"all-pass-test-list?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #" "
0 0 14 3 10 #"atom->bool"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";all-pass-test-list?: (X) [X -> Boolean] [List-of SExpr] -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 86
(20
 #";Does each Atom in the given [List-of SExpr] return #t for the predi"
 #"cate _atom->bool_?"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"all-pass-test-list?"
0 0 25 3 1 #" "
0 0 14 3 10 #"atom->bool"
0 0 25 3 1 #" "
0 0 14 3 3 #"los"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #") ("
0 0 14 3 10 #"atom->bool"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 3 #")) "
0 0 14 3 3 #"los"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";abstracted-all-numbers?: SExpr -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";implements all-pass-test? to rewrite all-numbers?"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";... is every Atom in the given SExpr a Number? ..."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 23 #"abstracted-all-numbers?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 14 #"all-pass-test?"
0 0 25 3 1 #" "
0 0 14 3 7 #"number?"
0 0 25 3 1 #" "
0 0 14 3 5 #"sexpr"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 50 #"; Exercises 6-8                                   "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";                                            "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";  ;;;;;;; ;;;;;; ;;;;;;; ;;;;;;   ;   ;;;;  "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";     ;    ;         ;    ;     ;  ;  ;    ; "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";     ;    ;         ;    ;     ;  ;  ;      "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";     ;    ;         ;    ;     ;  ;  ;      "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";     ;    ;;;;;     ;    ;;;;;;   ;   ;;;;  "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";     ;    ;         ;    ;    ;   ;       ; "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";     ;    ;         ;    ;     ;  ;       ; "
0 0 25 29 1 #"\n"
0 0 17 3 45 #";     ;    ;         ;    ;     ;  ;  ;    ; "
0 0 25 29 1 #"\n"
0 0 17 3 86
(21
 #";     ;    ;;;;;;    ;    ;      ; ;   ;;;;                         "
 #"                  "
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";;;;;;;;;; LIBRARIES ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 2 #") "
0 0 17 3 44 #";allows the primitive Color to be used below"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 25 3 2 #") "
0 0 17 3 54 #";allows the game to be rendered and access to big-bang"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;;;;;;;;; DATA DEFINITIONS ;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";********* PROBABILITY **************************"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";A Probability is an Integer in the range [0,100]"
0 0 25 29 1 #"\n"
0 0 17 3 60
#";interp.: the probability of something happening, out of 100"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"probability-1/4"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"probability-2/4"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"probability-3/4"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"probability-4/4"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"probability-36/100"
0 0 25 3 1 #" "
0 0 22 3 2 #"36"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";********* TETRISDIRECTION **********************"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";A TetrisDirection is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- \"down\""
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- \"left\""
0 0 25 29 1 #"\n"
0 0 17 3 10 #";- \"right\""
0 0 25 29 1 #"\n"
0 0 17 3 95
(22
 #";interp.: Three directions bricks in a Piece can be placed relative "
 #"to the upper-leftmost brick"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"td-down"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"td-left"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"td-right"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";td-templ: TetrisDirection -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"td-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";********* TETRISSHAPENAME **********************"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";A TetrisShapeName is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"O\""
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"I\""
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"L\""
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"J\""
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"T\""
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"Z\""
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"S\""
0 0 25 29 1 #"\n"
0 0 17 3 67
(23
 #";- \"M\" (A piece that consists of a single brick of color \"magenta"
 #"\")"
) 0 0 25 29 1 #"\n"
0 0 17 3 102
(24
 #";- \"G\" (A piece that is l"
 #"ike the \342\200\234I\342\200\235 piece but"
 #" contains 5 \"darkgreen\" bricks in a row instead of 4"
) 0 0 25 29 1 #"\n"
0 0 17 3 20 #";       \"blue\" ones)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";interp.: the names of all seven pieces in the tetris game"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"tsn-O"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"tsn-I"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"tsn-L"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 5 #"; ..."
0 0 25 29 1 #"\n"
0 0 17 3 34 #";tsn-templ: TetrisShapeName -> ???"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"tsn-templ"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 77
(25
 #";Useful constant: TSN-SIZE represents the amount of possible TetrisS"
 #"hapeNames"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"TSN-SIZE"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #"; TSN-PAIR *******************************************"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 8 #"tsn-pair"
0 0 25 3 2 #" ["
0 0 14 3 4 #"name"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";A TSNPair is a (make-tsn-pair TetrisShapeName Image-Color)"
0 0 25 29 1 #"\n"
0 0 17 3 70
(26
 #";interp.: The name of a piece in tetris, paired with its correct col"
 #"or"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-O"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-I"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-L"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-J"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-T"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-Z"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-S"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-M"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-G"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-tsn-pair"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";tsn-pair-templ: TSNPair -> ???"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"tsn-pair-templ"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 9 #"tsn-templ"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tsn-name"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 9 #"tsn-color"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 50 #"; ********* TETRISCOLOR **************************"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";a TetrisColor is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";- \"red\""
0 0 25 29 1 #"\n"
0 0 17 3 11 #";- \"orange\""
0 0 25 29 1 #"\n"
0 0 17 3 11 #";- \"yellow\""
0 0 25 29 1 #"\n"
0 0 17 3 10 #";- \"green\""
0 0 25 29 1 #"\n"
0 0 17 3 8 #";- \"blue"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";- \"indigo\""
0 0 25 29 1 #"\n"
0 0 17 3 11 #";- \"violet\""
0 0 25 29 1 #"\n"
0 0 17 3 12 #";- \"magenta\""
0 0 25 29 1 #"\n"
0 0 17 3 15 #";- \"dark green\""
0 0 25 29 1 #"\n"
0 0 17 3 100
(27
 #";interp.: Possible colors of bricks in a tetris game. Used in place "
 #"of Image-color in order to allow"
) 0 0 25 29 1 #"\n"
0 0 17 3 30 #";for random color generation. "
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tc-r"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tc-o"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tc-y"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";tc-templ: TetrisColor -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tc-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tc"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 72
(28
 #";useful constant: TC-SIZE describes the amount of possible TetrisCol"
 #"ors."
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"TC-SIZE"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";********* BRICK ********************************"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"brick"
0 0 25 3 2 #" ["
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 95
(29
 #";A Brick is a (make-brick NNN NNN Color)   ;Note: I decided to chang"
 #"e x and y to NNN instead of"
) 0 0 25 29 1 #"\n"
0 0 17 3 58
#";      integers since x and y can be positive rational #'s"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";      also coordinates on the canvas cannot be negative"
0 0 25 29 1 #"\n"
0 0 17 3 92
(30
 #";interp.: A square brick in a tetris game with grid x coordinate _x_"
 #", grid y coordinate _y_,"
) 0 0 25 29 1 #"\n"
0 0 17 3 25 #";and render color _color_"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 4 #"32.5"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-3"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";brick-templ: Brick -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";********* PIECE *******************************"
0 0 25 29 1 #"\n"
0 0 17 3 95
(31
 #"; ;we elected not to make our Pieces structs, since we would have to"
 #" rewrite each instance of a"
) 0 0 25 29 1 #"\n"
0 0 17 3 95
(32
 #"; Piece in >400 places. Since a valid Piece in our game is defined r"
 #"elative to its top-leftmost"
) 0 0 25 29 1 #"\n"
0 0 17 3 98
(33
 #"; Brick, the center of each Piece \342\200\234p\342\200\235 is (firs"
 #"t p). This solution is more efficient than using"
) 0 0 25 29 1 #"\n"
0 0 17 3 55 #"; structs to define Pieces since it simplifies the code"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";A Piece is a [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 17 3 94
(34
 #";interp.: a piece in a tetris game consisting of an arbitrary number"
 #" of bricks, one or greater"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-3"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 97
(35
 #";note that the above examples are not necessarily valid pieces in a "
 #"tetris game sice they are not"
) 0 0 25 29 1 #"\n"
0 0 17 3 64
#";close to each other but are still valid as instances of a Piece"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";piece-templ: Piece -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")) "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"cons?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 4 #")) ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-templ"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 11 #"piece-templ"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 6 #")))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";********** TETRISWORLD ******************************"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #" ["
0 0 14 3 5 #"piece"
0 0 25 3 1 #" "
0 0 14 3 4 #"base"
0 0 25 3 1 #" "
0 0 14 3 5 #"score"
0 0 25 3 1 #" "
0 0 14 3 4 #"end?"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";A TetrisWorld is a (make-tw Piece [List-of Brick] Integer Boolean)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";interp.: The current state of a tetris game, where"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";- The piece on the board are represented by _piece_."
0 0 25 29 1 #"\n"
0 0 17 3 58
#";- The pieces collected on the bottom of the board, _base_"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";- The player's current score, _score_, an integer value"
0 0 25 29 1 #"\n"
0 0 17 3 87
(36
 #";- A boolean value _end?_ which is #t if the player has lost the gam"
 #"e and #f otherwise."
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"tw-START"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"tw-END"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()  "
0 0 22 3 3 #"500"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()  "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-2"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()  "
0 0 22 3 3 #"125"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-3"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()  "
0 0 22 3 3 #"228"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-4"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 4 #"3423"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";tw-templ: TetrisWorld -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-templ"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 11 #"piece-templ"
0 0 25 3 2 #" ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")) "
0 0 17 3 26 #";;Piece == [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 8 #"tw-score"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"tw-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 71
(37
 #";;;;;;;;; EVENT HANDLER FUNCTIONS / WISHLIST ;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";TO-DRAW CLAUSE: draw-board*"
0 0 25 29 1 #"\n"
0 0 17 3 80
(38
 #";-------------------------------------------------------------------"
 #"------------"
) 0 0 25 29 1 #"\n"
0 0 17 3 34 #";*draw-board: TetrisWorld -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";draws the current world state, including the piece falling piece."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-board"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 1 #"5"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 6 #"#false"
0 0 25 3 3 #")) "
0 6           4 22 1815
(39
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 100 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop "
 #"(#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400) #"
 #"(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 120 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(str"
 #"uct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0))"
 #" 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:point 0"
 #" 400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 10"
 #"0 20 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 200 0) #(struct:point 200 400) #(struct:point 0 400)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 120 20 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0"
 #" 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pul"
 #"led-point 0 0 200 400 0 0) #(struct:pulled-point 0 0 0 400 0 0)) 255"
 #" \"white\")))))))))))))))))) #(struct:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-board"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 3 #"912"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 6 #"#false"
0 0 25 3 3 #")) "
0 6           4 22 1824
(40
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 100 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400)"
 #" #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 100 20 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #("
 #"struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 "
 #"0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:po"
 #"int 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 120 20 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulle"
 #"d-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"gr"
 #"een\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #"
 #"(struct:point 200 0) #(struct:point 200 400) #(struct:point 0 400)) "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 140 20 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 "
 #"20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"green\"))) #(s"
 #"truct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(s"
 #"truct:pulled-point 0 0 200 400 0 0) #(struct:pulled-point 0 0 0 400 "
 #"0 0)) 255 \"white\")))))))))))))))))) #(struct:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-board"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 3 #"121"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 6 #"#false"
0 0 25 3 3 #")) "
0 6           4 22 1826
(41
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 100 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400"
 #") #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 60 20 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #("
 #"struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 "
 #"0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:p"
 #"oint 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 80 20 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulle"
 #"d-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"ye"
 #"llow\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 200 0) #(struct:point 200 400) #(struct:point 0 400))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 100 20 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"yellow\"))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #"
 #"(struct:pulled-point 0 0 200 400 0 0) #(struct:pulled-point 0 0 0 40"
 #"0 0 0)) 255 \"white\")))))))))))))))))) #(struct:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-board"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 3 #"121"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 22 3 6 #"#false"
0 0 25 3 3 #")) "
0 6           4 22 1831
(42
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 100 100 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 4"
 #"00) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 60 120 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0)"
 #" #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20"
 #" 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struc"
 #"t:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 80 120 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:p"
 #"ulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 "
 #"\"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0"
 #" 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:point 0 4"
 #"00)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 100 "
 #"120 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-poin"
 #"t 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"yellow\""
 #"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0"
 #" 0) #(struct:pulled-point 0 0 200 400 0 0) #(struct:pulled-point 0 0"
 #" 0 400 0 0)) 255 \"white\")))))))))))))))))) #(struct:bb 200 400 400"
 #") #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-board"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #") ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";*draw-piece-and-base: Piece [List-of Brick]-> Image"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";renders a Piece on the board"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 6           4 22 1813
(43
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20"
 #" 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0"
 #" 0 0 20 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400) #("
 #"struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 20 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struc"
 #"t:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 2"
 #"55 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:point 0 "
 #"400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 2"
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point "
 #"0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"blue\"))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 200 0) #(struct:point 200 400) #(struct:point 0 400)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 20 20 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(st"
 #"ruct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0)"
 #" #(struct:pulled-point 0 0 0 20 0 0)) 255 \"blue\"))) #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulle"
 #"d-point 0 0 200 400 0 0) #(struct:"
 #"pulled-point 0 0 0 400 0 0)) 255 \"white\")))))))))))))))))) #(struc"
 #"t:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 6           4 22 1812
(44
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20"
 #" 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0"
 #" 0 0 20 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400) #("
 #"struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 20 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struc"
 #"t:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 2"
 #"55 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:point 0 "
 #"400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 40 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point "
 #"0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"blue\"))) "
 #"#(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:p"
 #"oint 200 0) #(struct:point 200 400) #(struct:point 0 400)) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 60 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) "
 #"#(struct:pulled-point 0 0 0 20 0 0)) 255 \"blue\"))) #(struct:transl"
 #"ate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled"
 #"-point 0 0 200 400 0 0) #(struct:pulled-point 0 0 0 400 0 0)) 255 \""
 #"white\")))))))))))))))))) #(struct:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 6           4 22 1819
(45
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 100 100 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400)"
 #" #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 60 120 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #("
 #"struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 "
 #"0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:poin"
 #"t 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 80 120 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-"
 #"point 0 0 20 20 0 0) #(struct:pul"
 #"led-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 2"
 #"00 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 100 120 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0"
 #" 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0"
 #" 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 400 0 0) #("
 #"struct:pulled-point 0 0 0 400 0 0)) 255 \"white\")))))))))))))))))) "
 #"#(struct:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 6           4 22 1833
(46
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 100 100 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) 255 \"violet\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 4"
 #"00) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 100 120 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0"
 #") #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 2"
 #"0 0 0)) 255 \"violet\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 200 0) #(struct:point 200 400) #(stru"
 #"ct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 120 120 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct"
 #":pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 25"
 #"5 \"violet\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:point 0"
 #" 400)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 14"
 #"0 120 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-po"
 #"int 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"violet"
 #"\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0"
 #" 0 0) #(struct:pulled-point 0 0 200 400 0 0) #(struct:pulled-point 0"
 #" 0 0 400 0 0)) 255 \"white\")))))))))))))))))) #(struct:bb 200 400 4"
 #"00) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 6           4 22 1829
(47
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 60 140 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"indigo\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 40"
 #"0) #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 40 160 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) "
 #"#(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 "
 #"0 0)) 255 \"indigo\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct"
 #":point 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 60 160 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pu"
 #"lled-point 0 0 20 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) 255 \"indigo\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:"
 #"point 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 80 160 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) 255 \"indigo\"))) #(struct:translate 0 0 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point 0 0 200 40"
 #"0 0 0) #(struct:pulled-point 0 0 0 400 0 0)) 255 \"white\"))))))))))"
 #")))))))) #(struct:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 6           4 22 1825
(48
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 40 180 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400"
 #") #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 60 180 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #"
 #"(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0"
 #" 0)) 255 \"green\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:p"
 #"oint 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 60 200 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pull"
 #"ed-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"g"
 #"reen\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 200 0) #(struct:point 200 400) #(struct:point 0 400))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 80 200 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"green\"))) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #("
 #"struct:pulled-point 0 0 200 400 0 0) #(struct:pulled-point 0 0 0 400"
 #" 0 0)) 255 \"white\")))))))))))))))))) #(struct:bb 200 400 400) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 6           4 22 1826
(49
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 400) #(struct:point 0 400)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 20 80 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:cr"
 #"op (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 400"
 #") #(struct:point 0 400)) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 40 80 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #("
 #"struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 "
 #"0)) 255 \"yellow\"))) #(struct:translate 0 0 #(struct:crop (#(struct"
 #":point 0 0) #(struct:point 200 0) #(struct:point 200 400) #(struct:p"
 #"oint 0 400)) #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 100 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulle"
 #"d-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"ye"
 #"llow\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) "
 #"#(struct:point 200 0) #(struct:point 200 400) #(struct:point 0 400))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 20 100 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0"
 #" 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"yellow\"))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #"
 #"(struct:pulled-point 0 0 200 400 0 0) #(struct:pulled-point 0 0 0 40"
 #"0 0 0)) 255 \"white\")))))))))))))))))) #(struct:bb 200 400 400) #f)"
) 0 0 25 3 15 #")              "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"draw-piece-and-base"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 10 #"base-image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 11 #"place-image"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 11 #"gridpos->px"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 11 #"gridpos->px"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                        "
0 0 14 3 10 #"base-image"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 8 #"BOARD-BG"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";draw-brick: Brick -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";draws a single Brick on the board"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 2 #") "
0 6           4 22 225
(50
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"blue\")) #("
 #"struct:bb 20 20 20) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")) "
0 6           4 22 224
(51
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\")) #(s"
 #"truct:bb 20 20 20) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")) "
0 6           4 22 226
(52
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"green\")) #"
 #"(struct:bb 20 20 20) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 3 #")) "
0 6           4 22 227
(53
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"violet\")) "
 #"#(struct:bb 20 20 20) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")) "
0 6           4 22 227
(54
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"yellow\")) "
 #"#(struct:bb 20 20 20) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")) "
0 6           4 22 227 54 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-brick"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"square"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRIDSQ-SIZE"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";gridpos->px: NNN -> NNN"
0 0 25 29 1 #"\n"
0 0 17 3 93
(55
 #";converts a position on the grid (usually small numbers like 1, 2, G"
 #"RID-WIDTH or GRID-HEIGHT)"
) 0 0 25 29 1 #"\n"
0 0 17 3 101
(56
 #";to a value in pixels where bricks can be rendered. Also shifts posi"
 #"tions by 1/2 grid square in order"
) 0 0 25 29 1 #"\n"
0 0 17 3 74
(57
 #";to center bricks in the grid so they're not placed on intersection "
 #"points"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gridpos->px"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 2 #"30"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gridpos->px"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 22 3 3 #"110"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gridpos->px"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #") "
0 0 22 3 3 #"210"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gridpos->px"
0 0 25 3 1 #" "
0 0 14 3 3 #"pos"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRIDSQ-SIZE"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRIDSQ-SIZE"
0 0 25 3 1 #" "
0 0 14 3 3 #"pos"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 101
(58
 #";-------------------------------------------------------------------"
 #"---------------------------------"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";ON-KEY CLAUSE: move-piece-w-key"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";*move-piece-w-key: TetrisWorld KeyEvent -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 17 3 71
(59
 #";allows the user to interact with the tetris games. The user can pre"
 #"ss:"
) 0 0 25 29 1 #"\n"
0 0 17 3 80
(60
 #";- \"right\"/right arrow key to move the falling piece one gridsquar"
 #"e to the right"
) 0 0 25 29 1 #"\n"
0 0 17 3 77
(61
 #";- \"left\"/left arrow key to move the falling piece one gridsquare "
 #"to the left"
) 0 0 25 29 1 #"\n"
0 0 17 3 70
(62
 #";- \"down\"/down arrow key to move the falling piece one gridsquare "
 #"down"
) 0 0 25 29 1 #"\n"
0 0 17 3 61
#";- \"s\"/s key to rotate the falling piece 90 degrees clockwise"
0 0 25 29 1 #"\n"
0 0 17 3 68
(63
 #";- \"r\"/r key to rotate the falling piece 90 degrees counterclockwi"
 #"se"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 3 #"\"j\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"down\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"down\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")) "
0 0 22 3 2 #"55"
0 0 25 3 1 #" "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                 "
0 0 22 3 6 #"#false"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"55"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 3 #") ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 3 #") ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"fall-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"s\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"rotate-cw"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"a\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"rotate-ccw"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";*tetris-world-right: TetrisWorld -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 17 3 101
(64
 #";replicates the given tetris world but shifts the current piece righ"
 #"t if it is still within the board"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 2 #"32"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"32"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 2 #"11"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"11"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 2 #"99"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                   "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"99"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                       "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                       "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                       "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                       "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                       "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"tetris-world-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #") ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"tw-score"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 7 #"tw-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";*tetris-world-left: TetrisWorld -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 17 3 101 64 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 2 #"32"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"32"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 2 #"11"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"11"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 2 #"99"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                  "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 2 #"99"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"tetris-world-left"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #") ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"tw-score"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 7 #"tw-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";*shift-right-if-on-board: Piece [List-of Brick] -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 99
(65
 #";if the given piece stays within the boundaries of the board when it"
 #" is shifted, it shifts right by"
) 0 0 25 29 1 #"\n"
0 0 17 3 43 #";one gridsquare. otherwise, nothing happens"
0 0 25 29 1 #"\n"
0 0 17 3 65
#";also checks if the piece will collide with the base when shifted"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 23 #"shift-right-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 17 #"piece-x-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-right"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-right"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #") "
0 0 14 3 3 #"lob"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"piece-right"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";*piece-right: Piece -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";shifts a piece in the tetris game right by one gridsquare"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-right"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-right"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"67/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-right"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"67/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-right"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";*shift-left-if-on-board: Piece [List-of Brick]-> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 100
(66
 #";if the given piece stays within the boundaries of the board when it"
 #" is shifted, it shifts left by 1"
) 0 0 25 29 1 #"\n"
0 0 17 3 39 #";gridsquare. otherwise, nothing happens"
0 0 25 29 1 #"\n"
0 0 17 3 65
#";also checks if the piece will collide with the base when shifted"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 22 #"shift-left-if-on-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 17 #"piece-x-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"piece-left"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"piece-left"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #") "
0 0 14 3 3 #"lob"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"piece-left"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";*piece-left: Piece -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";shifts a piece in the tetris game left by one gridsquare"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"piece-left"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"49"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"piece-left"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 4 #"31.5"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"49"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"piece-left"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 4 #"31.5"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"49"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"piece-left"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";*rotate-cw: TetrisWorld -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 17 3 76
(67
 #";updates the tetrisworld to rotate the falling piece by 90 degrees c"
 #"lockwise"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rotate-cw"
0 0 25 3 1 #" "
0 0 14 3 8 #"tw-START"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rotate-cw"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 4 #"3423"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rotate-cw"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 3 #"400"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 3 #"400"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rotate-cw"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 3 #"400"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 3 #"400"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rotate-cw"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 7 #"make-tw"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"tw-score"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"tw-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";rotate-piece-cw: Piece -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 88
(68
 #";rotates the bricks in a falling piece 90 degrees clockwise and cent"
 #"ers them in the grid"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 6 #"173/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 8          10 22 5 #"57/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-brick-cw"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #") "
0 0 17 3 18 #";; Brick -> Brick "
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 6 #"posn-x"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 15 #"rotate-brick-cw"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";*rotate-ccw: TetrisWorld -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 17 3 83
(69
 #";updates the tetrisworld to rotate the falling piece by 90 degrees c"
 #"ounterclockwise"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rotate-ccw"
0 0 25 3 1 #" "
0 0 14 3 6 #"tw-END"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 3 #"500"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 5 #"#true"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rotate-ccw"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 4 #"3423"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rotate-ccw"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 22 3 3 #"400"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"'"
0 0 25 3 2 #"()"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 3 #"400"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rotate-ccw"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 3 #"200"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rotate-ccw"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 14 3 7 #"piece-1"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 22 3 3 #"300"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 22 3 2 #"#f"
0 0 25 3 13 #"))           "
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 3 #"300"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rotate-ccw"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-piece-ccw"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 7 #"make-tw"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-piece-ccw"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"tw-score"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"tw-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";*rotate-piece-ccw: Piece -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 95
(70
 #";rotates the bricks in a falling piece 90 degrees counterclockwise a"
 #"nd centers them in the grid"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-piece-ccw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-piece-ccw"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-piece-ccw"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-piece-ccw"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-piece-ccw"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"rotate-brick-ccw"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 6 #"posn-x"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 1 #" "
0 0 14 3 16 #"rotate-brick-ccw"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick->posn"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 17 3 101 58 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";ON-TICK CLAUSE: fall-piece"
0 0 25 29 1 #"\n"
0 0 17 3 101 58 0 0 25 29 1 #"\n"
0 0 17 3 40 #";*fall-piece: TetrisWorld -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";shifts a piece in a TetrisWorld down by one grid square"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fall-piece"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 3 #"tw?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fall-piece"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fall-piece"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                              "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                              "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 3 #"tw?"
0 0 25 3 5 #")    "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fall-piece"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-2"
0 0 25 3 2 #") "
0 0 14 3 3 #"tw?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fall-piece"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-3"
0 0 25 3 2 #") "
0 0 14 3 3 #"tw?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"fall-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 3 2 #" ("
0 0 14 3 12 #"shift-or-gen"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #") ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 11 #"update-base"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #") ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #")) "
0 0 17 3 45 #";;we can simplify these later if there's time"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 8 #"tw-score"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 24 #"update-end?-if-game-ends"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tw-piece"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 3 #") ("
0 0 14 3 7 #"tw-base"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";; shift-or-gen : Piece [List-of Brick] -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 98
(71
 #";; PURPOSE: Checks to see if there is collision between the base and"
 #" the piece. If the the current"
) 0 0 25 29 1 #"\n"
0 0 17 3 101
(72
 #";; piece has not reached the bottom of the board, it gets shifted do"
 #"wn one gridsquare. If the current"
) 0 0 25 29 1 #"\n"
0 0 17 3 99
(73
 #";; piece has reached the bottom of the board, a new random piece is "
 #"spawned at the top of the board"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"shift-or-gen"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"shift-or-gen"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 12 #"shift-or-gen"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 12 #"shift-or-gen"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"17"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"shift-or-gen"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 14 #"not-at-bottom?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 4 #")) ("
0 0 14 3 10 #"collision?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"spawn-piece"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 11 #"shift-piece"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";*shift-piece: Piece -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 70
(74
 #";moves the y coordinate of all Bricks in a Piece down by 1 grid squa"
 #"re"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-piece"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"101"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-piece"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"47"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"101"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-piece"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"47"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"101"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-piece"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #")) ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";*shift-brick: Brick -> Brick"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";moves the y coordinate of a brick down by 1 grid square"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-brick"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"101"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-brick"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"47"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"shift-brick"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-brick"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"add1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";*spawn-piece: Piece -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 101
(75
 #";spawns an entirely random piece (with a random x coordinate and ran"
 #"dom piece type) at the top of the"
) 0 0 25 29 1 #"\n"
0 0 17 3 94
(76
 #";board. Note that the piece passed to this function doesn't matter. "
 #"Maybe this function can be"
) 0 0 25 29 1 #"\n"
0 0 17 3 29 #";redesigned with lambda later"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 11 #"spawn-piece"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #") "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 11 #"spawn-piece"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 2 #") "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 11 #"spawn-piece"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 2 #") "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"spawn-piece"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-tsnp"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";*gen-rand-tsnp: Piece -> TetrisShapeName"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";generates a random TetrisShapeName"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-tsnp"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #") "
0 0 14 3 7 #"struct?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-tsnp"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 2 #") "
0 0 14 3 7 #"struct?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-tsnp"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 2 #") "
0 0 14 3 7 #"struct?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-tsnp"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 8 #"TSN-SIZE"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";*number->tsnp: Natural -> TSNPair"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";maps numbers 1 through 1 less than TSN-SIZE to a unique TSNPair"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-O"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-I"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-L"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-J"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-T"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-Z"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-S"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-M"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"number->tsnp"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-O"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-I"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-L"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-J"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-T"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-Z"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-S"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-M"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 2 #") "
0 0 14 3 10 #"tsn-pair-G"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";*gen-rand-tc: Piece -> TetrisColor"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";generates a random TetrisColor"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gen-rand-tc"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #") "
0 0 14 3 7 #"string?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gen-rand-tc"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 2 #") "
0 0 14 3 7 #"string?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gen-rand-tc"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 2 #") "
0 0 14 3 7 #"string?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"gen-rand-tc"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"number->tc"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 14 3 7 #"TC-SIZE"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";*number->tc: Natural -> TetrisColor"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";maps numbers 1 through 1 less than TC-SIZE to a unique TetrisColor"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"number->tc"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"violet\""
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";update-base: Piece [List-of Brick] -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 17 3 93
(77
 #";if the falling piece collides with the base, append that Piece to t"
 #"he base's [List-of Brick]"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-base"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"()) ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-base"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-base"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 8          10 22 5 #"65/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-base"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"update-base"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 14 #"not-at-bottom?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 3 #"lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";max-y-base: [List-of Brick] -> NNN"
0 0 25 29 1 #"\n"
0 0 17 3 87
(78
 #";computes the maximum y coordinate of all of the bricks in a TetrisW"
 #"orld's _base_ field"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"max-y-base"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"max-y-base"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"max-y-base"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 3 #")) "
0 0 22 3 3 #"100"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"max-y-base"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 4 #"))  "
0 0 17 3 41 #";;NOTE: Only works for [NE-List-of Brick]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"F"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"MAXREST"
0 0 25 3 2 #" ("
0 0 14 3 10 #"max-y-base"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 5 #")))] "
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"F"
0 0 25 3 1 #" "
0 0 14 3 7 #"MAXREST"
0 0 25 3 2 #") "
0 0 14 3 1 #"F"
0 0 25 3 1 #" "
0 0 14 3 7 #"MAXREST"
0 0 25 3 6 #"))])) "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";piece-height: Piece -> Natural"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";counts the number of distinct y coordinates in a Piece"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"piece-height"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"piece-height"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 4 #"))) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"piece-height"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"piece-height"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 3 #")) "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"piece-height"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"piece-height"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";piece-width: Piece -> Natural"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";counts the number of distinct x coordinates in a Piece"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-width"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 3 #")) "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-width"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 4 #"))) "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-width"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-piece-cw"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 4 #"))) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-width"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 3 #")) "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-width"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-width"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-x"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 77
(79
 #";remove-duplicate-coord: [List-of Brick] [Brick -> Number] -> [List-"
 #"of Brick]"
) 0 0 25 29 1 #"\n"
0 0 17 3 78
(80
 #";filters the given [List-of Brick] for only Bricks with unique value"
 #"s given by"
) 0 0 25 29 1 #"\n"
0 0 17 3 32 #";the parameter [Brick -> Number]"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 40 #"                                       ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 7 #"brick-x"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 7 #"brick-y"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 22 #"remove-duplicate-coord"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #" "
0 0 14 3 8 #"selector"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 16 #"curr-brick-outer"
0 0 25 3 1 #" "
0 0 14 3 14 #"rest-of-bricks"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 16 #"curr-brick-outer"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 16 #"curr-brick-inner"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 8 #"selector"
0 0 25 3 1 #" "
0 0 14 3 16 #"curr-brick-outer"
0 0 25 3 3 #") ("
0 0 14 3 8 #"selector"
0 0 25 3 1 #" "
0 0 14 3 16 #"curr-brick-inner"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                         "
0 0 14 3 14 #"rest-of-bricks"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 22 3 1 #"'"
0 0 25 3 3 #"() "
0 0 14 3 3 #"lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";collision?: Piece [List-of Brick] -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 90
(81
 #";do any of the Bricks in the falling Piece exist in the same locatio"
 #"n as the Bricks in the"
) 0 0 25 29 1 #"\n"
0 0 17 3 17 #";[List-of Brick]?"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-2"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 3 #"123"
0 0 25 3 1 #" "
0 0 22 3 3 #"123"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 3 #"123"
0 0 25 3 1 #" "
0 0 22 3 3 #"123"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shift-piece"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #") "
0 0 14 3 3 #"lob"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";intersection: Piece [List-of Brick] -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 17 3 72
(82
 #";creates a new list with only the common elements of the two given l"
 #"ists"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 4 #"))) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 17 3 78
(83
 #";(check-expect (intersection piece-1 (list (first piece-1))) (list ("
 #"piece-1)))"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"intersection"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 4 #"elem"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 13 #"contains-x-y?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 13 #"contains-x-y?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 1 #"p"
0 0 25 3 3 #")) "
0 0 17 3 67
#";;pieces are shifted so that pieces do not overlap when they become"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";;stationary"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";contains-x-y?: [List-of Brick] Brick -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 81
(84
 #";does the given [List-of Brick] contain a Brick with a given brick-x"
 #" and brick-y?"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"contains-x-y?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"() ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"contains-x-y?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"contains-x-y?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"contains-x-y?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 10 #"curr-brick"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 10 #"curr-brick"
0 0 25 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 10 #"curr-brick"
0 0 25 3 3 #") ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 5 #")))) "
0 0 14 3 3 #"lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";update-end?-if-game-ends: Piece [List-of Brick] -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 24 #"update-end?-if-game-ends"
0 0 25 3 2 #"  "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 10 #"collision?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 3 #") ("
0 0 14 3 20 #"piece-y-above-board?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 86
(85
 #";; exercise 7 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
 #"~~~~~~~~~~~~~~~~~~"
) 0 0 25 29 1 #"\n"
0 0 17 3 8 #";; quack"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #")) "
0 0 17 3 57 #"; a list of bricks with one row to be cleared and one not"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 4 #"))) "
0 0 17 3 42 #";; a list of bricks that should be cleared"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 62
#";clear-rows-and-shift-down: [List-of Brick] -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 17 3 98
(86
 #";If any Bricks in a row need to be cleared, they are cleared and the"
 #" rest of the Bricks above them"
) 0 0 25 29 1 #"\n"
0 0 17 3 33 #";are shifted down one grid square"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 25 #"clear-rows-and-shift-down"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 19 #"combine-brick-lists"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 8 #"row-list"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 2 #" ("
0 0 14 3 19 #"sort-base-into-rows"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 2 #" ("
0 0 14 3 19 #"sort-base-into-rows"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 11 #"shift-piece"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                            "
0 0 14 3 8 #"row-list"
0 0 25 3 4 #")) ("
0 0 14 3 19 #"sort-base-into-rows"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 17 3 84
(87
 #"; clear-rows-and-shift-down : [List-of [List-of Brick]] -> [List-of "
 #"[List-of Brick]]"
) 0 0 25 29 1 #"\n"
0 0 17 3 90
(88
 #";; Clears rows that need to be cleared and shifts all of the bricks "
 #"above down accordingly"
) 0 0 25 29 1 #"\n"
0 0 17 3 15 #";; write checks"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 2 #"|("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 25 #"clear-rows-and-shift-down"
0 0 17 3 1 #" "
0 0 17 3 6 #"lo-lob"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 3 3 #" [("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 17 #"vertical-distance"
0 0 17 3 1 #" "
0 0 17 3 9 #"top-brick"
0 0 17 3 1 #" "
0 0 17 3 12 #"bottom-brick"
0 0 17 3 43 #") ;; vertical-distance : Brick Brick -> NNN"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"            (- brick-y |#"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"racket/list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";get-index: (X) Natural [List-of X] -> X"
0 0 25 29 1 #"\n"
0 0 17 3 69
(89
 #";gets the element located at the index _ind_ in the given list, _lst"
 #"_"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"get-index"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #")) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"get-index"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #")) "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"get-index"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #")) "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"get-index"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 5 #"))) ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"get-index"
0 0 25 3 1 #" "
0 0 14 3 3 #"ind"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 4 #"elem"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 8 #"index-of"
0 0 25 3 1 #" "
0 0 14 3 3 #"lst"
0 0 25 3 1 #" "
0 0 14 3 4 #"elem"
0 0 25 3 2 #") "
0 0 14 3 3 #"ind"
0 0 25 3 3 #")) "
0 0 14 3 3 #"lst"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; - - - - - "
0 0 25 29 1 #"\n"
0 0 17 3 44 #";clear-any-rows?: [List-of Brick] -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";should any of the rows in the base (a [List-of Brick]) be cleared?"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"clear-any-rows?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"clear-any-rows?"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"clear-any-rows?"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"clear-any-rows?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"clear-any-rows?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 8 #"row-list"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 2 #") "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 4 #")) ("
0 0 14 3 19 #"sort-base-into-rows"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";combine-brick-lists: [List-of [List-of Brick]] -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 17 3 75
(90
 #";formats a list consisting of [List-of Brick] into a single [List-of"
 #" Brick]"
) 0 0 25 29 1 #"\n"
0 0 17 3 60
#";useful for rendering a base after checking for cleared rows"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"combine-brick-lists"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"clear-rows"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 19 #"combine-brick-lists"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 5 #"())) "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"combine-brick-lists"
0 0 25 3 1 #" "
0 0 14 3 6 #"lo-lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 14 3 6 #"lo-lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";count-cleared: [List-of [List-of Brick]] -> NonNegativeInteger"
0 0 25 29 1 #"\n"
0 0 17 3 50 #";counts the number of rows in a Base to be cleared"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"count-cleared"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"count-cleared"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sort-base"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #") "
0 0 14 3 7 #"brick-y"
0 0 25 3 3 #")) "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"count-cleared"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 3 #")) "
0 0 17 3 13 #";bricks can't"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #") "
0 0 17 3 14 #";exist on the "
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #") "
0 0 17 3 12 #";same gridsq"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #") "
0 0 17 3 14 #";so this is a "
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #") "
0 0 17 3 12 #";completely "
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")) "
0 0 17 3 11 #";valid test"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 5 #")))) "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"count-cleared"
0 0 25 3 1 #" "
0 0 14 3 6 #"lo-lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 25 3 1 #" "
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"clear-rows"
0 0 25 3 1 #" "
0 0 14 3 6 #"lo-lob"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 17 3 14 #"; - - - - -   "
0 0 25 29 1 #"\n"
0 0 17 3 70
(91
 #";; clear-rows : [List-of [List-of Brick]] -> [List-of [List-of Brick"
 #"]]"
) 0 0 25 29 1 #"\n"
0 0 17 3 91
(92
 #";; Checks if there are any full rows and removes the ones that are f"
 #"ull. Ouput is organized"
) 0 0 25 29 1 #"\n"
0 0 17 3 90
(93
 #";; as a list of rows, with each row consisting of bricks with equal "
 #"y-coordinate (brick-y)"
) 0 0 25 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"clear-rows"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"9"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                           ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 5 #"))) ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"()))"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"clear-rows"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"()) "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 10 #"clear-rows"
0 0 17 29 1 #"\n"
0 0 17 3 16 #"               ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"6"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"7"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"8"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"9"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"yellow"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"purple"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"purple"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"                     ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"3"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"purple"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"              ("
0 0 17 3 4 #"list"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 2 #"()"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"purple"
0 0 17 3 3 #") ("
0 0 17 3 10 #"make-brick"
0 0 17 3 1 #" "
0 0 17 3 1 #"2"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 6 #"purple"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"                          ("
0 0 17 3 10 #"make-brick"
0 0 17 3 18 #" 3 1 'purple))))|#"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; write checks"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"clear-rows"
0 0 25 3 1 #" "
0 0 14 3 6 #"lo-lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"row-full?"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 2 #") "
0 0 17 3 29 #";; [List-of Brick] -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 3 #")  "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 8 #"row-list"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 9 #"row-full?"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 14 3 5 #"empty"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                           "
0 0 14 3 8 #"row-list"
0 0 25 3 3 #")) "
0 0 14 3 6 #"lo-lob"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #"; - - - - -"
0 0 25 29 1 #"\n"
0 0 17 3 73
(94
 #";; count-cleared : [List-of [List-of Brick]] -> [List-of [List-of Br"
 #"ick]]"
) 0 0 25 29 1 #"\n"
0 0 17 3 23 #";; Counts the amount of"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 2 #"|("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 13 #"count-cleared"
0 0 17 3 1 #" "
0 0 17 3 6 #"lo-lob"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 5 #"local"
0 0 17 3 3 #" [("
0 0 17 3 6 #"define"
0 0 17 3 2 #" ("
0 0 17 3 9 #"row-full?"
0 0 17 3 1 #" "
0 0 17 3 8 #"row-list"
0 0 17 3 2 #") "
0 0 17 3 29 #";; [List-of Brick] -> Boolean"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"            ("
0 0 17 3 1 #"="
0 0 17 3 2 #" ("
0 0 17 3 6 #"length"
0 0 17 3 1 #" "
0 0 17 3 8 #"row-list"
0 0 17 3 3 #")  "
0 0 17 3 10 #"GRID-WIDTH"
0 0 17 3 3 #"))]"
0 0 17 29 1 #"\n"
0 0 17 3 5 #"    ("
0 0 17 3 5 #"foldr"
0 0 17 3 1 #" "
0 0 17 3 1 #"+"
0 0 17 3 1 #" "
0 0 17 3 1 #"0"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"           ("
0 0 17 3 3 #"map"
0 0 17 3 2 #" ("
0 0 17 3 2 #"\316\273"
0 0 17 3 2 #" ("
0 0 17 3 8 #"row-list"
0 0 17 3 3 #") ("
0 0 17 3 2 #"if"
0 0 17 3 2 #" ("
0 0 17 3 9 #"row-full?"
0 0 17 3 1 #" "
0 0 17 3 8 #"row-list"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"                                  "
0 0 17 3 1 #"1"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"                                  "
0 0 17 3 1 #"0"
0 0 17 29 1 #"\n"
0 0 17 3 50 #"                                  )) lo-lob)))) |#"
0 0 25 3 7 #"       "
0 0 25 29 1 #"\n"
0 0 17 3 11 #"; - - - - -"
0 0 25 29 1 #"\n"
0 0 17 3 72
(95
 #";sort-base: [List-of Brick] [Brick -> NNN] ->  [List-of [List-of Bri"
 #"ck]]"
) 0 0 25 29 1 #"\n"
0 0 17 3 40 #";                             a selector"
0 0 25 29 1 #"\n"
0 0 17 3 102
(96
 #";sorts the given base _lob_ into a list containing sublists of Brick"
 #"s where all bricks in that sublist"
) 0 0 25 29 1 #"\n"
0 0 17 3 88
(97
 #";have a matching value given by the applying the selector _brick-sel"
 #"ector_ to each Brick"
) 0 0 25 29 1 #"\n"
0 0 17 3 76
(98
 #";When implemented with _brick-selector_ == brick-y, sorts the base i"
 #"nto rows"
) 0 0 25 29 1 #"\n"
0 0 17 3 79
(99
 #";When implemented with _brick-selector_ == brick-x, sorts the base i"
 #"nto columns"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sort-base"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #" "
0 0 14 3 14 #"brick-selector"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"selector->dimension"
0 0 25 3 1 #" "
0 0 14 3 14 #"brick-selector"
0 0 25 3 2 #") "
0 0 17 3 46 #";; [Brick -> NNN] -> Natural (see \"CONSTANTS\")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 25 3 1 #" "
0 0 14 3 14 #"brick-selector"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 1 #" "
0 0 17 3 71
(100
 #";; A selector for the struct Brick with signature [Brick -> NNN] is "
 #"one"
) 0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 70
(101
 #";;            of two selectors: brick-x and brick-y, so if can be us"
 #"ed"
) 0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"extract-row/col"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"brick"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 19 #"selector->dimension"
0 0 25 3 1 #" "
0 0 14 3 14 #"brick-selector"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 14 #"brick-selector"
0 0 25 3 1 #" "
0 0 14 3 5 #"brick"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"n"
0 0 25 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"build-list"
0 0 25 3 2 #" ("
0 0 14 3 19 #"selector->dimension"
0 0 25 3 1 #" "
0 0 14 3 14 #"brick-selector"
0 0 25 3 2 #") "
0 0 14 3 15 #"extract-row/col"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 11 #"; - - - - -"
0 0 25 29 1 #"\n"
0 0 17 3 69
(102
 #";; sort-base-into-rows : [List-of Brick] -> [List-of [List-of Brick]"
 #"]"
) 0 0 25 29 1 #"\n"
0 0 17 3 74
(103
 #";; Generates a list of bricks with equal y values (list-of rows of b"
 #"ricks)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; write checks"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";SHIFT ALL ROWS UP 1 GRIDSQ OR CHANGE LIMITS:"
0 0 25 29 1 #"\n"
0 0 17 3 59
#";Bricks are indexed at 0-19 for y so y = 20 does not render"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";abstract this to sort cols"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"sort-base-into-rows"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"extract-row"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 17 3 42 #";; extract-row : NatNum -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"brick"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 5 #"brick"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"n"
0 0 25 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 1 #" "
0 0 14 3 11 #"extract-row"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"sort-base-into-rows"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"extract-row"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 17 3 42 #";; extract-row : NatNum -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"brick"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 5 #"brick"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"n"
0 0 25 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 1 #" "
0 0 14 3 11 #"extract-row"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 17 3 11 #"; - - - - -"
0 0 25 29 1 #"\n"
0 0 17 3 72
(104
 #";; sort-base-into-columns : [List-of Brick] -> [List-of [List-of Bri"
 #"ck]]"
) 0 0 25 29 1 #"\n"
0 0 17 3 77
(105
 #";; Generates a list of bricks with equal x values (list-of columns o"
 #"f bricks)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; write checks"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 22 #"sort-base-into-columns"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"extract-column"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 17 3 45 #";; extract-column : NatNum -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"brick"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 5 #"brick"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"n"
0 0 25 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 1 #" "
0 0 14 3 14 #"extract-column"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #"; - - - - -"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"extract-row"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #") "
0 0 17 3 42 #";; extract-row : NatNum -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"brick"
0 0 25 3 3 #") ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 5 #"brick"
0 0 25 3 4 #"))  "
0 0 14 3 1 #"n"
0 0 25 3 3 #")) "
0 0 14 3 3 #"lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";; row-full? : [List-of Brick] -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";; Checks to see if a row is full"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"row-full?"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 1 #" "
0 0 14 3 8 #"row-list"
0 0 25 3 2 #") "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";base-height: [List-of Brick] -> Natural"
0 0 25 29 1 #"\n"
0 0 17 3 85
(106
 #";computes the height (in grid squares) of a Base. Different from pie"
 #"ce-height in that"
) 0 0 25 29 1 #"\n"
0 0 17 3 40 #";empty spaces between bricks are counted"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";FIX FOR EMPTY CASE"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"base-height"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"base-max-y"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #") "
0 0 17 3 29 #";; [List-of Brick] -> Natural"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #") ("
0 0 14 3 3 #"max"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 5 #"first"
0 0 25 3 2 #") "
0 0 14 3 4 #"rest"
0 0 25 3 3 #")) "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 5 #")])) "
0 0 17 3 27 #";-1 assumed base case since"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 81
(107
 #";                                                              brick"
 #"-y > 0 always"
) 0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"base-min-y"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #") "
0 0 17 3 29 #";; [List-of Brick] -> Natural"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 5 #"cons?"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #") ("
0 0 14 3 3 #"min"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 5 #"first"
0 0 25 3 2 #") "
0 0 14 3 4 #"rest"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 2 #") "
0 0 14 3 3 #"lob"
0 0 25 3 5 #")]))]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 82
(108
 #";                                                          assumed b"
 #"ase case since"
) 0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 94
(109
 #";                                                          brick-y <"
 #" (add1 GRID-HEIGHT) always"
) 0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 10 #"base-max-y"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 10 #"base-min-y"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"base-max-y"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #") "
0 0 17 3 29 #";; [List-of Brick] -> Natural"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #") ("
0 0 14 3 3 #"max"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 5 #"first"
0 0 25 3 2 #") "
0 0 14 3 4 #"rest"
0 0 25 3 3 #")) "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"base-min-y"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 2 #") "
0 0 17 3 29 #";; [List-of Brick] -> Natural"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 4 #"rest"
0 0 25 3 3 #") ("
0 0 14 3 3 #"min"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 5 #"first"
0 0 25 3 2 #") "
0 0 14 3 4 #"rest"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 2 #") "
0 0 14 3 3 #"lob"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 94
(110
 #";                         a base can't have a negative y value, so -"
 #"1 is a safe minimum to use"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";; write checks"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";(define (row-full? lob)"
0 0 25 29 1 #"\n"
0 0 17 3 5 #"; ())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 89
(111
 #"; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
 #"~~~~~~~~~~~~~~~~~~~~~"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";STOP-WHEN CLAUSE: end-tetris?"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";end-tetris?: TetrisWorld -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";should the tetris game end?"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"end-tetris?"
0 0 25 3 1 #" "
0 0 14 3 6 #"tw-END"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"end-tetris?"
0 0 25 3 2 #" ("
0 0 14 3 7 #"make-tw"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-3"
0 0 25 3 2 #"  "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()  "
0 0 22 3 3 #"500"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"end-tetris?"
0 0 25 3 1 #" "
0 0 14 3 4 #"tw-1"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"end-tetris?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"tw-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tw"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";will be added later"
0 0 25 29 1 #"\n"
0 0 17 3 101 58 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";;;;;;;; CONSTANTS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRIDSQ-SIZE"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"WIDTH-PX"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRIDSQ-SIZE"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"HEIGHT-PX"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRIDSQ-SIZE"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"MAX-PIECE-HEIGHT"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"BOARD-BG"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 14 3 8 #"WIDTH-PX"
0 0 25 3 1 #" "
0 0 14 3 9 #"HEIGHT-PX"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"white"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"VERT-DIVIDER"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 9 #"HEIGHT-PX"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"HORIZ-DIVIDER"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 14 3 8 #"WIDTH-PX"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 25 3 1 #" "
0 0 22 3 2 #".3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";;;;;;;; HELPFUL FUNCTIONS ;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";*make-piece: TetrisShapeName Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";makes a piece given its name and the upper left brick in the piece"
0 0 25 29 1 #"\n"
0 0 17 3 102
(112
 #";*** note that all pieces are made using a collection of brick-down,"
 #" brick-left, and brick-right calls"
) 0 0 25 29 1 #"\n"
0 0 17 3 102
(113
 #";for consistency's sake, bricks will be made in a style similar to r"
 #"eading english, where the top left"
) 0 0 25 29 1 #"\n"
0 0 17 3 101
(114
 #";brick is created first, then all the bricks to the right of it, the"
 #"n the bottom leftmost brick, then"
) 0 0 25 29 1 #"\n"
0 0 17 3 52 #";all the bricks to the right of that, and so on. ***"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-O"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-I"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-L"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-J"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-T"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-Z"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-S"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-M"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 3 #"tsn"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 3 #") ("
0 0 14 3 6 #"make-G"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";*make-O: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 82
(115
 #";makes the O piece, a 2x2 square, starting at the top left brick (th"
 #"e given brick)"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-O"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"  "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-O"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-O"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";*make-I: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 85
(116
 #";makes the I piece, a 4x2 rectangle, starting at the top left brick "
 #"(the given brick)"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-I"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"  "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-I"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-I"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-I"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";*make-L: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 93
(117
 #";makes the L piece, a 3x1 rectangle with an extra brick on the upper"
 #" rightmost side above the"
) 0 0 25 29 1 #"\n"
0 0 17 3 95
(118
 #";rectangle, starting at the top left brick (the given brick) (this h"
 #"appens to also be the upper"
) 0 0 25 29 1 #"\n"
0 0 17 3 17 #";rightmost brick)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-L"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"  "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-L"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-L"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";*make-J: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 98
(119
 #";makes the J piece, a  3x1 rectangle with a brick on the upper lefto"
 #"most side above the rectangle,"
) 0 0 25 29 1 #"\n"
0 0 17 3 49 #";starting at the top left brick (the given brick)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-J"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"  "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-J"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 3 #"121"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 3 #"121"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 3 #"121"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 3 #"122"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 3 #"123"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-J"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-J"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";*make-T: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 96
(120
 #";makes the T piece, a 3x1 rectangle with an extra brick above the mi"
 #"ddle brick in the rectangle,"
) 0 0 25 29 1 #"\n"
0 0 17 3 79
(121
 #";starting at the top left brick (the given brick) (the middle brick "
 #"on the top)"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-T"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"  "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-T"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-T"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";*make-Z: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 98
(122
 #";makes the Z piece, a 2x1 rectangle with another 2x1 rectangle above"
 #" it, aligned so that the upper"
) 0 0 25 29 1 #"\n"
0 0 17 3 86
(123
 #";rectangle is shifted one brick left of the bottom one, starting at "
 #"the top left brick"
) 0 0 25 29 1 #"\n"
0 0 17 3 18 #";(the given brick)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-Z"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"  "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-Z"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-Z"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-Z"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";*make-S: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 98
(124
 #";makes the S piece, a 2x1 rectangle with another 2x1 rectangle above"
 #" it, aligned so that the upper"
) 0 0 25 29 1 #"\n"
0 0 17 3 87
(125
 #";rectangle is shifted one brick right of the bottom one, starting at"
 #" the top left brick"
) 0 0 25 29 1 #"\n"
0 0 17 3 18 #";(the given brick)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-S"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"  "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-S"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-S"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 7 #"())))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";make-M: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 95
(126
 #";makes the \"M\" Piece, a single brick of color \"magenta\" at the l"
 #"ocation of the given brick _br_"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-M"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-M"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-M"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-M"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";make-G: Brick -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 99
(127
 #";makes the \"G\" piece, 5 bricks s"
 #"ide-by-side of color \"dark green\", starting at the given brick _br"
 #"_"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"13"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 5 #")))  "
0 0 25 3 13 #"             "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"make-G"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 3 7 #"       "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";*brick-shift: Brick TetrisDirection Natural -> Brick"
0 0 25 29 1 #"\n"
0 0 17 3 81
(128
 #";creates an identical brick displaced from the given brick in the gi"
 #"ven direction"
) 0 0 25 29 1 #"\n"
0 0 17 3 34 #";by a given number of grid squares"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-shift"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"101"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-shift"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 4 #"25.5"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-shift"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-3"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-shift"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 25 3 3 #") ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 3 8 #"        "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 25 29 1 #"\n"
0 0 17 3 36 #";*brick-down: Brick Natural -> Brick"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";shifts a brick down by a given number of grid spaces"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"101"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 4 #"32.5"
0 0 25 3 1 #" "
0 0 22 3 2 #"48"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-down"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";*brick-left: Brick Natural -> Brick"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";shifts a brick left by a given number of grid spaces"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"49"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 4 #"30.5"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")) "
0 0 17 3 32 #";this brick wouldn't be rendered"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"brick-left"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 3 #") ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";*brick-right: Brick Natural -> Brick"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";shifts a brick right by a given number of grid spaces"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"51"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 4 #"34.5"
0 0 25 3 1 #" "
0 0 22 3 2 #"46"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 7 #"brick-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"brick-right"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 10 #"gridspaces"
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"brick-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 99
(129
 #";I will also define some constants here as examples of pieces at the"
 #" top of the board in the middle"
) 0 0 25 29 1 #"\n"
0 0 17 3 53 #";of the board. These will be helpful in check-expects"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-O"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-I"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-L"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-J"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-T"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-Z"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-S"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-M"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"M\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-G"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 12 #"BOARD-CENTER"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";&&&&&&&&&&&&&&&&&&&&&&&&"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";*gen-piece: TSNPair Natural -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 98
(130
 #";makes a piece that is within the L/R boundaries of the board with t"
 #"he given name and color with y"
) 0 0 25 29 1 #"\n"
0 0 17 3 100
(131
 #";coordinate 0. If the given x-coordinate generates a piece out of th"
 #"e L/R boundaries of the board, a"
) 0 0 25 29 1 #"\n"
0 0 17 3 76
(132
 #";piece is generated in the middle of the board so it will fit the bo"
 #"undaries"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-O"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-I"
0 0 25 3 1 #" "
0 0 22 3 7 #"1000000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-L"
0 0 25 3 1 #" "
0 0 22 3 10 #"-200000000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-J"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 13 #"\"medium cyan\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-T"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-Z"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-M"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-G"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"7"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-coord"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 2 #" ("
0 0 14 3 13 #"tsn-pair-name"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                           ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-coord"
0 0 25 3 2 #" ("
0 0 14 3 14 #"tsn-pair-color"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"make-piece"
0 0 25 3 2 #" ("
0 0 14 3 13 #"tsn-pair-name"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 3 #") ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-coord"
0 0 25 3 2 #" ("
0 0 14 3 14 #"tsn-pair-color"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 10 #"make-piece"
0 0 25 3 2 #" ("
0 0 14 3 13 #"tsn-pair-name"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 3 #") ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 14 #"tsn-pair-color"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";*gen-brick: Natural TetrisColor -> Brick"
0 0 25 29 1 #"\n"
0 0 17 3 84
(133
 #";generates a brick at the given x coordinate with y coordinate 0 and"
 #" the given color"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"violet\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"gen-brick"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-coord"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-coord"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";Implementing the above functions, we can write:"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";*gen-rand-piece: TSNPair -> Piece"
0 0 25 29 1 #"\n"
0 0 17 3 95
(134
 #";generates the desired piece in its standard color at a random x coo"
 #"rdinate with y coordinate 0"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-O"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-I"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-L"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-J"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-T"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-Z"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-M"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 10 #"tsn-pair-G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-piece"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"gen-piece"
0 0 25 3 1 #" "
0 0 14 3 4 #"tsnp"
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";*and-piece-x-y-on-board?: Piece -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 81
(135
 #";are ALL of the Bricks in a Piece within the left and right borders "
 #"of the board?"
) 0 0 25 29 1 #"\n"
0 0 17 3 102
(136
 #";note that this is fundamentally different from a function that chec"
 #"ks that at least one of the Bricks"
) 0 0 25 29 1 #"\n"
0 0 17 3 28 #";in a Piece are on the board"
0 0 25 29 1 #"\n"
0 0 17 3 68
#";TESTS FOR CREATING EACH PIECE IN THE TOP LEFT CORNER, x = 0, y = 0:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"I\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"L\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"J\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"Z\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"S\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 23 #"and-piece-x-y-on-board?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 2 #" ("
0 0 14 3 11 #"piece-width"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 2 #" ("
0 0 14 3 12 #"piece-height"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";piece-x-on-board?: Piece -> Boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"piece-x-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"T\""
0 0 25 3 1 #" "
0 0 14 3 12 #"brick-ORIGIN"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"piece-x-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"piece-x-on-board?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"piece-x-on-board?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"piece-x-on-board?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 5 #")))) "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 39 #";piece-y-above-board?: Piece -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";Are any of the bricks in a Piece above the boundary of the board?"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"piece-y-above-board?"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"piece-y-above-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"piece-y-above-board?"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-piece"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"O\""
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 22 3 3 #"-50"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"piece-y-above-board?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"piece-y-above-board?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 2 #"br"
0 0 25 3 3 #") ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 7 #"brick-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"br"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";not-at-bottom? : Piece -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 63
#"; Determines if a Piece is not at the bottom of the TetrisWorld"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"not-at-bottom?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"not-at-bottom?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 3 #")  "
0 0 25 3 35 #"                                   "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"not-at-bottom?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"orange\""
0 0 25 3 4 #"))) "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"not-at-bottom?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 2 #">="
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 2 #" ("
0 0 14 3 10 #"max-y-base"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #")) "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";******* MAIN FUNCTION ****************************************"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 80
(137
 #";We decided to call the main function \"tetris\" not \"main\" to be "
 #"more descriptive"
) 0 0 25 29 1 #"\n"
0 0 17 3 52 #";*tetris: PositiveInteger Probability -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"tetris"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #") "
0 0 17 3 65
#";;n is in the range [0,GRID-HEIGHT] and p is in the range [0,101]"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 10 #"draw-board"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 25 3 1 #" "
0 0 14 3 16 #"move-piece-w-key"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"on-tick"
0 0 25 3 1 #" "
0 0 14 3 10 #"fall-piece"
0 0 25 3 1 #" "
0 0 14 3 9 #"TICK-RATE"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 9 #"stop-when"
0 0 25 3 1 #" "
0 0 14 3 11 #"end-tetris?"
0 0 25 3 5 #"]))  "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 65
#";See under data definitions section for handler function wishlist"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 63
#";gen-rand-world: PositiveInteger PositiveInteger -> TetrisWorld"
0 0 25 29 1 #"\n"
0 0 17 3 99
(138
 #";creates a TetrisWorld consisting of a falling piece and a base with"
 #" Bricks in the bottom _n_ rows."
) 0 0 25 29 1 #"\n"
0 0 17 3 67
#";in each gridsquare, the probability of a Brick existing is _p_/100"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 3 #"tw?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 7 #"tw-base"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 3 #"tw?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 7 #"tw-base"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 6 #"empty?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 3 #"tw?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 7 #"tw-base"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"gen-rand-world"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"make-tw"
0 0 25 3 2 #" ("
0 0 14 3 11 #"spawn-piece"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #") "
0 0 17 3 62
#";any piece given to spawn-piece produces a valid falling piece"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 22 3 1 #"0"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";gen-rand-base: PositiveInteger PositiveInteger -> [List-of Brick]"
0 0 25 29 1 #"\n"
0 0 17 3 85
(139
 #";generates the base of a TetrisWorld, with a base with Bricks in the"
 #" bottom _n_ rows."
) 0 0 25 29 1 #"\n"
0 0 17 3 67
#";in each gridsquare, the probability of a Brick existing is _p_/100"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 6 #"empty?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 15 #"check-satisfied"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 14 3 5 #"list?"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 6 #"length"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 3 #") ("
0 0 14 3 4 #"add1"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"gen-rand-base"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" [("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"build-row-list"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 10 #"build-list"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 16 #"build-brick-list"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"build-brick-list"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 10 #"build-list"
0 0 25 3 2 #"  "
0 0 14 3 10 #"GRID-WIDTH"
0 0 25 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 25 3 2 #" ("
0 0 14 3 5 #"x-val"
0 0 25 3 3 #") ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 2 #" ("
0 0 14 3 6 #"random"
0 0 25 3 1 #" "
0 0 22 3 3 #"101"
0 0 25 3 2 #") "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 52 #"                                                   ("
0 0 14 3 10 #"make-brick"
0 0 25 3 1 #" "
0 0 14 3 5 #"x-val"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                               ("
0 0 14 3 4 #"sub1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 11 #"GRID-HEIGHT"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                               ("
0 0 14 3 11 #"gen-rand-tc"
0 0 25 3 1 #" "
0 0 14 3 7 #"piece-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 51 #"                                                   "
0 0 19 3 13 #"\"NOT A BRICK\""
0 0 25 3 6 #"))))] "
0 0 17 3 19 #";;a placeholder for"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 32 #"; bricks that were not generated"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 25 3 1 #" "
0 0 14 3 6 #"brick?"
0 0 25 3 1 #" "
0 0 17 3 28 #";;extracts all valid bricks "
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 5 #"apply"
0 0 25 3 1 #" "
0 0 14 3 6 #"append"
0 0 25 3 2 #" ("
0 0 14 3 14 #"build-row-list"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 5 #")))))"
0           0
