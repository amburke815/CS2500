#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 98 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 6593 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 183
(6
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname HW4_AdamB"
 #"urke) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 11 #";Homework 4"
0 0 25 29 1 #"\n"
0 0 17 3 8 #";CS 2500"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";Adam Burke and Jackie Torres Villolobos"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 5 #"circl"
0 0 25 3 2 #" ["
0 0 14 3 6 #"radius"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 1 #" "
0 0 14 3 7 #"outline"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 94
(7
 #";A Circle is a (make-circl PositiveNumber Image-Color Mode)  ;;I'm a"
 #"ssuming I can use Mode and"
) 0 0 25 29 1 #"\n"
0 0 17 3 35 #";;Image-Color as pre-def types from"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";;image.rkt"
0 0 25 29 1 #"\n"
0 0 17 3 99
(8
 #";interp.: a (make-circle r c ol) is a circle with radius r (in px), "
 #"color c (as a string or symbol)"
) 0 0 25 29 1 #"\n"
0 0 17 3 81
(9
 #";         and outline mode ol (as a string or symbol) such as \"soli"
 #"d\" or 'outline"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-1"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-2"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-3"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"56"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"purple\""
0 0 25 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-4"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"green"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";circl-templ: Circle -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"circl-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 12 #"circl-radius"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"circl-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"circl-outline"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 2 #" ["
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 1 #" "
0 0 14 3 7 #"outline"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 76
(10
 #";A Rectangle is a (make-rect PositiveNumber PositiveNumber Image-Col"
 #"or Mode)"
) 0 0 25 29 1 #"\n"
0 0 17 3 87
(11
 #";interp.: a (make-rect w h c ol) is a rectangle with width w (in px)"
 #", height h (in px),"
) 0 0 25 29 1 #"\n"
0 0 17 3 85
(12
 #";         color c (as a string or symbol) and outline mode ol (as a "
 #"string or symbol)"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-3"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-4"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"silver\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";rect-templ: Rectangle -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 10 #"rect-width"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"rect-height"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"rect-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 12 #"rect-outline"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 3 #"txt"
0 0 25 3 2 #" ["
0 0 14 3 6 #"string"
0 0 25 3 1 #" "
0 0 14 3 4 #"size"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";A Text is a (make-txt String PositiveNumber Image-Color)"
0 0 25 29 1 #"\n"
0 0 17 3 98
(13
 #";interp.: a (make-txt str sz c) is a message with content str (as a "
 #"string), text size sz (in px),"
) 0 0 25 29 1 #"\n"
0 0 17 3 45 #";         and color c (as a string or symbol)"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-2"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"this is a string\""
0 0 25 3 1 #" "
0 0 22 3 5 #"125.5"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-3"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";txt-templ: Text -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"txt-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 10 #"txt-string"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 8 #"txt-size"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"txt-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";UNION"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";A Shape is one of"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- Circle"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";- Rectangle"
0 0 25 29 1 #"\n"
0 0 17 3 7 #";- Text"
0 0 25 29 1 #"\n"
0 0 17 3 81
(14
 #";interp.: one of three shape structures containing relevant info abo"
 #"ut each shape"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-r1"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";shape-templ: Shape -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"shape-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"circl?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 11 #"circl-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 5 #"rect?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 10 #"rect-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 4 #"txt?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 9 #"txt-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";change-color: Shape Image-Color -> Shape"
0 0 25 29 1 #"\n"
0 0 17 3 56 #";changes the color of the given shape to the given color"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-r1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"gold\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"gold\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"yellow"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"circl?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 12 #"change-circl"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"rect?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 11 #"change-rect"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 4 #"txt?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 10 #"change-txt"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";change-circl: Circle Image-Color -> Circle"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";changes the color of the circle to the given color"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-circl"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-circl"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-circl"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"56"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-circl"
0 0 25 3 1 #" "
0 0 14 3 5 #"circl"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-circl"
0 0 25 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 25 3 1 #" "
0 0 14 3 5 #"circl"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 14 3 1 #"c"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 13 #"circl-outline"
0 0 25 3 1 #" "
0 0 14 3 5 #"circl"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";change-rect: Rectangle Image-Color -> Rectangle"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";changes the color of the rectangle to the given color"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-rect"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-rect"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-rect"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-rect"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-rect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 11 #"rect-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"             "
0 0 14 3 1 #"c"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 12 #"rect-outline"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";change-txt: Text Image-Color -> Text"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";changes the color of the text to the given color"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"change-txt"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-1"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"change-txt"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"this is a string\""
0 0 25 3 1 #" "
0 8          10 22 6 #"251/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"brown"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"change-txt"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-3"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"magenta\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"change-txt"
0 0 25 3 1 #" "
0 0 14 3 3 #"txt"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"make-txt"
0 0 25 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 25 3 1 #" "
0 0 14 3 3 #"txt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 8 #"txt-size"
0 0 25 3 1 #" "
0 0 14 3 3 #"txt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"            "
0 0 14 3 1 #"c"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 6 #"2shape"
0 0 25 3 2 #" ["
0 0 14 3 3 #"sh1"
0 0 25 3 1 #" "
0 0 14 3 3 #"sh2"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";A 2Shape is a (make-2shape Shape Shape)"
0 0 25 29 1 #"\n"
0 0 17 3 47 #";interp.: A collection of 2 shapes, sh1 and sh2"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"2shape-1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-r1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"2shape-2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"2shape-3"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-r1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";2shape-templ: 2Shape -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"2shape-templ"
0 0 25 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"2shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"2shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 3 #"2sh"
0 0 25 3 2 #"))"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 6 #"3shape"
0 0 25 3 2 #" ["
0 0 14 3 3 #"sh1"
0 0 25 3 1 #" "
0 0 14 3 3 #"sh2"
0 0 25 3 1 #" "
0 0 14 3 3 #"sh3"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 46 #";A 3Shape is a (make-3shape Shape Shape Shape)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";interp.: A collection of 3 shapes, sh1 sh2 and sh3"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"3shape-1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-2"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;im assuming its okay to have specific shapes here"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"3shape-2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-r1"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-2"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"3shape-3"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";3shape-templ: 3Shape -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"3shape-templ"
0 0 25 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 3 #"3sh"
0 0 25 3 2 #"))"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 6 #"4shape"
0 0 25 3 2 #" ["
0 0 14 3 3 #"sh1"
0 0 25 3 1 #" "
0 0 14 3 3 #"sh2"
0 0 25 3 1 #" "
0 0 14 3 3 #"sh3"
0 0 25 3 1 #" "
0 0 14 3 3 #"sh4"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";A 4Shape is a (make-4shape Shape Shape Shape Shape)"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";interp.: A collection of 4 shapes, sh1 sh2 sh3 sh4"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"4shape-1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-2"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-3"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";;im assuming its okay to have specific shapes here"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"4shape-2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-r1"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-2"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-2"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"4shape-3"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-t1"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";4shape-templ: 4Shape -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"4shape-templ"
0 0 25 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"shape-templ"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh4"
0 0 25 3 1 #" "
0 0 14 3 3 #"4sh"
0 0 25 3 2 #"))"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";A ShapeScene is one of"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- 2Shape"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- 3Shape"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";- 4Shape"
0 0 25 29 1 #"\n"
0 0 17 3 71
(15
 #";interp.: A collection of shapes. Could be 2, 3, or 4 shapes in a sc"
 #"ene"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-1"
0 0 25 3 1 #" "
0 0 14 3 8 #"2shape-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-2"
0 0 25 3 1 #" "
0 0 14 3 8 #"3shape-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-3"
0 0 25 3 1 #" "
0 0 14 3 8 #"4shape-1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";shapescene-templ: ShapeScene -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"shapescene-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"2shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 12 #"2shape-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 7 #"3shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 12 #"3shape-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 7 #"4shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 12 #"4shape-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 4 #")]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";change-size: ShapeScene PositiveNumber -> ShapeScene"
0 0 25 29 1 #"\n"
0 0 17 3 77
(16
 #";changes the dimensions of all Shapes in a ShapeScene ss by a given "
 #"factor sf"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-1"
0 0 25 3 1 #" "
0 0 22 3 2 #".5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-2"
0 0 25 3 1 #" "
0 0 22 3 3 #".75"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-3shape"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-3"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-4shape"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 3 #"120"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"36"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"change-size"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #" "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"2shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 2 #" ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"2shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"2shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 7 #"3shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 2 #" ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 7 #"4shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 2 #" ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh4"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 2 #"sf"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";scale-shape: Shape -> Shape"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";scales the given shape sh by scale factor sf"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 1 #" "
0 0 14 3 8 #"shape-c1"
0 0 25 3 1 #" "
0 0 22 3 2 #".5"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-2"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"this is a string\""
0 0 25 3 1 #" "
0 0 22 3 3 #"502"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-3"
0 0 25 3 1 #" "
0 0 22 3 3 #"2.5"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"grey\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"scale-shape"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 1 #" "
0 0 14 3 2 #"sf"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"circl?"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"sf"
0 0 25 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 11 #"circl-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 13 #"circl-outline"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"rect?"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-rect"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"sf"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"sf"
0 0 25 3 2 #" ("
0 0 14 3 11 #"rect-height"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 10 #"rect-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 12 #"rect-outline"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 4 #"txt?"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 3 #") ("
0 0 14 3 8 #"make-txt"
0 0 25 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 2 #"sf"
0 0 25 3 2 #" ("
0 0 14 3 8 #"txt-size"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 9 #"txt-color"
0 0 25 3 1 #" "
0 0 14 3 2 #"sh"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";A Direction is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";- \"clockwise\""
0 0 25 29 1 #"\n"
0 0 17 3 22 #";- \"counter-clockwise\""
0 0 25 29 1 #"\n"
0 0 17 3 43 #";interp.: describes a direction of rotation"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"clockwise\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"counter-clockwise\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 28 #";dir-templ: Direction -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"dir-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";rotate-scene: ShapeScene Direction -> ShapeScene"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";rotates a Shapescene ss by the given direction d"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-1"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-2shape"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-2"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-3shape"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-2"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-3shape"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-3"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-4shape"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-3"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 11 #"make-4shape"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"2shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"2shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 10 #"2shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 4 #"))] "
0 0 17 3 23 #";;direction of rotation"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 15 #";;doesnt matter"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 7 #"3shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 63
#"                                                              ("
0 0 14 3 10 #"3shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 63
#"                                                              ("
0 0 14 3 10 #"3shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                               ("
0 0 14 3 10 #"3shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                               ("
0 0 14 3 10 #"3shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 5 #"))])]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 7 #"4shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh4"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 63
#"                                                              ("
0 0 14 3 10 #"4shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 63
#"                                                              ("
0 0 14 3 10 #"4shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 63
#"                                                              ("
0 0 14 3 10 #"4shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                            [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                               ("
0 0 14 3 10 #"4shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                               ("
0 0 14 3 10 #"4shape-sh4"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 64
#"                                                               ("
0 0 14 3 10 #"4shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 7 #"))])]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";draw-scene: ShapeScene -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 42 #";renders a given ShapeScene ss on a canvas"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-1"
0 0 25 3 2 #") "
0 6           4 22 363
(17
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 40 40 #("
 #"struct:ellipse 80 80 0 outline \"red\"))) #(struct:translate 80 20 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 30 0 0 0) #(struct:pulled-point 0 0"
 #" 30 40 0 0) #(struct:pulled-point 0 0 0 40 0 0)) outline \"red\"))))"
 #" #(struct:bb 110 80 80) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-2"
0 0 25 3 2 #") "
0 6           4 22 4242
(18
 #"(#(struct:overlay #(struct:translate 53.5 0 #(struct:translate 40 40"
 #" #(struct:ellipse 80 80 0 outline \"red\"))) #(struct:translate 0 80"
 #" #(struct:overlay #(struct:translate 0 12.5 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 4.5 7.5 #(struct:text \"D\" 0 1 \"purple\" 12 #f swiss normal nor"
 #"mal #f))) #(struct:translate 9.0 0.0 #(struct:translate 3.5 7.5 #(st"
 #"ruct:text \"o\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(s"
 #"truct:translate 16.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \""
 #"e\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:transl"
 #"ate 23.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"s\" 0 1 \"pu"
 #"rple\" 12 #f swiss normal normal #f))))) #(struct:translate 30.0 0.0"
 #" #(struct:translate 1.5 7.5 #(struct:text \" \" 0 1 \"purple\" 12 #f"
 #" swiss normal normal #f))))) #(struct:translate 33.0 0.0 #(struct:tr"
 #"anslate 1.5 7.5 #(struct:text \"l\" 0 1 \"purple\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 36.0 0.0 #(struct:translate 1.5 "
 #"7.5 #(struct:text \"i\" 0 1 \"purple\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 39.0 0.0 #(struct:translate 1.5 7.5 #(struct"
 #":text \"f\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 42.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"e\" "
 #"0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"49.0 0.0 #(struct:translate 1.5 7.5 #(struct:text \" \" 0 1 \"purple"
 #"\" 12 #f swiss normal normal #f))))) #(struct:translate 52.0 0.0 #(s"
 #"truct:translate 3.5 7.5 #(struct:text \"h\" 0 1 \"purple\" 12 #f swi"
 #"ss normal normal #f))))) #(struct:translate 59.0 0.0 #(struct:transl"
 #"ate 3.5 7.5 #(struct:text \"a\" 0 1 \"purple\" 12 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 66.0 0.0 #(struct:translate 2.5 7.5 "
 #"#(struct:text \"v\" 0 1 \"purple\" 12 #f swiss normal normal #f)))))"
 #" #(struct:translate 71.0 0.0 #(struct:translate 3.5 7.5 #(struct:tex"
 #"t \"e\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 78.0 0.0 #(struct:translate 1.5 7.5 #(struct:text \" \" 0 1 "
 #"\"purple\" 12 #f swiss normal normal #f))))) #(struct:translate 81.0"
 #" 0.0 #(struct:translate 3.5 7.5 #(struct:text \"a\" 0 1 \"purple\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 88.0 0.0 #(struc"
 #"t:translate 1.5 7.5 #(struct:text \" \" 0 1 \"purple\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 91.0 0.0 #(struct:translate "
 #"5.5 7.5 #(struct:text \"m\" 0 1 \"purple\" 12 #f swiss normal normal"
 #" #f))))) #(struct:translate 102.0 0.0 #(struct:translate 3.5 7.5 #(s"
 #"truct:text \"e\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #("
 #"struct:translate 109.0 0.0 #(struct:translate 3.5 7.5 #(struct:text "
 #"\"a\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 116.0 0.0 #(struct:translat"
 #"e 3.5 7.5 #(struct:text \"n\" 0 1 \"purple\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 123.0 0.0 #(struct:translate 1.5 7.5 #"
 #"(struct:text \"i\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) "
 #"#(struct:translate 126.0 0.0 #(struct:translate 3.5 7.5 #(struct:tex"
 #"t \"n\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 133.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"g\" 0 1"
 #" \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate 140"
 #".0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"?\" 0 1 \"purple\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 147.0 0 #(stru"
 #"ct:translate 20 20 #(struct:ellipse 40 40 0 255 \"blue\")))))) #(str"
 #"uct:bb 187.0 120.0 104.5) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-3"
0 0 25 3 2 #") "
0 6           4 22 6322
(19
 #"(#(struct:overlay #(struct:translate 84.0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 40 40 #(struct:ellipse 80 80 0 ou"
 #"tline \"red\"))) #(struct:translate 80 20 #(struct:translate 20 20 #"
 #"(struct:ellipse 40 40 0 255 \"blue\"))))) #(struct:translate 0 80 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 9.0 14."
 #"0 #(struct:text \"H\" 0 1 \"black\" 25 #f swiss normal normal #f))) "
 #"#(struct:translate 18.0 0.0 #(struct:translate 7.0 14.0 #(struct:tex"
 #"t \"e\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 32.0 0.0 #(struct:translate 3.0 14.0 #(struct:text \"l\" 0 1 "
 #"\"black\" 25 #f swiss normal normal #f))))) #(struct:translate 38.0 "
 #"0.0 #(struct:translate 3.0 14.0 #(struct:text \"l\" 0 1 \"black\" 25"
 #" #f swiss normal normal #f))))) #(struct:translate 44.0 0.0 #(struct"
 #":translate 7.0 14.0 #(struct:text \"o\" 0 1 \"black\" 25 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 58.0 0.0 #(struct:translate 3"
 #".5 14.0 #(struct:text \",\" 0 1 \"black\" 25 #f swiss normal normal "
 #"#f))))) #(struct:translate 65.0 0.0 #(struct:translate 3.5 14.0 #(st"
 #"ruct:text \" \" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 72.0 0.0 #(struct:translate 9.5 14.0 #(struct:text \""
 #"w\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(struct:transla"
 #"te 91.0 0.0 #(struct:translate 7.0 14.0 #(struct:text \"o\" 0 1 \"bl"
 #"ack\" 25 #f swiss normal normal #f))))) #(struct:translate 105.0 0.0"
 #" #(struct:translate 4.0 14.0 #(struct:text \"r\" 0 1 \"black\" 25 #f"
 #" swiss normal normal #f))))) #(struct:translate 113.0 0.0 #(struct:t"
 #"ranslate 3.0 14.0 #(struct:text \"l\" 0 1 \"black\" 25 #f swiss norm"
 #"al normal #f))))) #(struct:translate 119.0 0.0 #(struct:translate 7."
 #"0 14.0 #(struct:text \"d\" 0 1 \"black\" 25 #f swiss normal normal #"
 #"f))))) #(struct:translate 133.0 0.0 #(struct:translate 4.0 14.0 #(st"
 #"ruct:text \"!\" 0 1 \"black\" 25 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 141.0 6.5 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 4.5 7.5 #(struct"
 #":text \"D\" 0 1 \"purple\" 12 #f swiss normal normal #f))) #(struct:"
 #"translate 9.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"o\" 0 1"
 #" \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate 16."
 #"0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"e\" 0 1 \"purple\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 23.0 0.0 #(stru"
 #"ct:translate 3.5 7.5 #(struct:text \"s\" 0 1 \"purple\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 30.0 0.0 #(struct:translate"
 #" 1.5 7.5 #(struct:text \" \" 0 1 \"purple\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 33.0 0.0 #(struct:translate 1.5 7.5 #(s"
 #"truct:text \"l\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #("
 #"struct:translate 36.0 0.0 #(struct"
 #":translate 1.5 7.5 #(struct:text \"i\" 0 1 \"purple\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate 1"
 #".5 7.5 #(struct:text \"f\" 0 1 \"purple\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 42.0 0.0 #(struct:translate 3.5 7.5 #(str"
 #"uct:text \"e\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 49.0 0.0 #(struct:translate 1.5 7.5 #(struct:text \" "
 #"\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 52.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"h\" 0 1 \"pur"
 #"ple\" 12 #f swiss normal normal #f))))) #(struct:translate 59.0 0.0 "
 #"#(struct:translate 3.5 7.5 #(struct:text \"a\" 0 1 \"purple\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 66.0 0.0 #(struct:tra"
 #"nslate 2.5 7.5 #(struct:text \"v\" 0 1 \"purple\" 12 #f swiss normal"
 #" normal #f))))) #(struct:translate 71.0 0.0 #(struct:translate 3.5 7"
 #".5 #(struct:text \"e\" 0 1 \"purple\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 78.0 0.0 #(struct:translate 1.5 7.5 #(struct:"
 #"text \" \" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 81.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"a\" 0"
 #" 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate 8"
 #"8.0 0.0 #(struct:translate 1.5 7"
 #".5 #(struct:text \" \" 0 1 \"purple\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 91.0 0.0 #(struct:translate 5.5 7.5 #(struct:"
 #"text \"m\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 102.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"e\" "
 #"0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"109.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"a\" 0 1 \"purpl"
 #"e\" 12 #f swiss normal normal #f))))) #(struct:translate 116.0 0.0 #"
 #"(struct:translate 3.5 7.5 #(struct:text \"n\" 0 1 \"purple\" 12 #f s"
 #"wiss normal normal #f))))) #(struct:translate 123.0 0.0 #(struct:tra"
 #"nslate 1.5 7.5 #(struct:text \"i\" 0 1 \"purple\" 12 #f swiss normal"
 #" normal #f))))) #(struct:translate 126.0 0.0 #(struct:translate 3.5 "
 #"7.5 #(struct:text \"n\" 0 1 \"purple\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 133.0 0.0 #(struct:translate 3.5 7.5 #(struc"
 #"t:text \"g\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 140.0 0.0 #(struct:t"
 #"ranslate 3.5 7.5 #(struct:text \"?\" 0 1 \"purple\" 12 #f swiss norm"
 #"al normal #f)))))))) #(struct:bb 288.0 108.0 103.0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-scene"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 7 #"2shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"2shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"2shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 7 #"3shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"3shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 7 #"4shape?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #") ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh1"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh4"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ("
0 0 14 3 10 #"shape->img"
0 0 25 3 2 #" ("
0 0 14 3 10 #"4shape-sh3"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 7 #"))))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";shape->img: Shape -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";renders a single shape s as an image on a canvas"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 1 #" "
0 0 14 3 7 #"circl-1"
0 0 25 3 2 #") "
0 6           4 22 92
(20
 #"(#(struct:translate 40 40 #(struct:ellipse 80 80 0 outline \"red\"))"
 #" #(struct:bb 80 80 80) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 1 #" "
0 0 14 3 6 #"rect-2"
0 0 25 3 2 #") "
0 6           4 22 225
(21
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0"
 #" 0 40 30 0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 \"blue\")) #("
 #"struct:bb 40 30 30) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 1 #" "
0 0 14 3 5 #"txt-3"
0 0 25 3 2 #") "
0 6           4 22 3968
(22
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 4.5 7.5 #(struct:text \"D\" 0 1 \"purple"
 #"\" 12 #f swiss normal normal #f))) #(struct:translate 9.0 0.0 #(stru"
 #"ct:translate 3.5 7.5 #(struct:text \"o\" 0 1 \"purple\" 12 #f swiss "
 #"normal normal #f))))) #(struct:translate 16.0 0.0 #(struct:translate"
 #" 3.5 7.5 #(struct:text \"e\" 0 1 \"purple\" 12 #f swiss normal norma"
 #"l #f))))) #(struct:translate 23.0 0.0 #(struct:translate 3.5 7.5 #(s"
 #"truct:text \"s\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #("
 #"struct:translate 30.0 0.0 #(struct"
 #":translate 1.5 7.5 #(struct:text \" \" 0 1 \"purple\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 33.0 0.0 #(struct:translate 1"
 #".5 7.5 #(struct:text \"l\" 0 1 \"purple\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 36.0 0.0 #(struct:translate 1.5 7.5 #(str"
 #"uct:text \"i\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 39.0 0.0 #(struct:translate 1.5 7.5 #(struct:text \"f"
 #"\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 42.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"e\" 0 1 \"pur"
 #"ple\" 12 #f swiss normal normal #f))))) #(struct:translate 49.0 0.0 "
 #"#(struct:translate 1.5 7.5 #(struct:text \" \" 0 1 \"purple\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 52.0 0.0 #(struct:tra"
 #"nslate 3.5 7.5 #(struct:text \"h\" 0 1 \"purple\" 12 #f swiss normal"
 #" normal #f))))) #(struct:translate 59.0 0.0 #(struct:translate 3.5 7"
 #".5 #(struct:text \"a\" 0 1 \"purple\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 66.0 0.0 #(struct:translate 2.5 7.5 #(struct:"
 #"text \"v\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 71.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"e\" 0"
 #" 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate 7"
 #"8.0 0.0 #(struct:translate 1.5 7"
 #".5 #(struct:text \" \" 0 1 \"purple\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 81.0 0.0 #(struct:translate 3.5 7.5 #(struct:"
 #"text \"a\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 88.0 0.0 #(struct:translate 1.5 7.5 #(struct:text \" \" 0"
 #" 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate 9"
 #"1.0 0.0 #(struct:translate 5.5 7"
 #".5 #(struct:text \"m\" 0 1 \"purple\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 102.0 0.0 #(struct:translate 3.5 7.5 #(struct"
 #":text \"e\" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 109.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"a\""
 #" 0 1 \"purple\" 12 #f swiss normal normal #f))))) #(struct:translate"
 #" 116.0 0.0 #(struct:translate 3.5 7.5 #(struct:text \"n\" 0 1 \"purp"
 #"le\" 12 #f swiss normal normal #f))))) #(struct:translate 123.0 0.0 "
 #"#(struct:translate 1.5 7.5 #(struct:text \"i\" 0 1 \"purple\" 12 #f "
 #"swiss normal normal #f))))) #(struct:translate 126.0 0.0 #(struct:tr"
 #"anslate 3.5 7.5 #(struct:text \"n\" 0 1 \"purple\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 133.0 0.0 #(struct:translate 3.5"
 #" 7.5 #(struct:text \"g\" 0 1 \"purple\" 12 #f swiss normal normal #f"
 #"))))) #(struct:translate 140.0 0.0 #(struct:translate 3.5 7.5 #(stru"
 #"ct:text \"?\" 0 1 \"purple\" 12 #f swiss normal normal #f)))) #(stru"
 #"ct:bb 147.0 15.0 12.0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"shape->img"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"circl?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 12 #"circl-radius"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 13 #"circl-outline"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 11 #"circl-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"rect?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 11 #"rect-height"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 12 #"rect-outline"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 10 #"rect-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 4 #"txt?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #") ("
0 0 14 3 4 #"text"
0 0 25 3 2 #" ("
0 0 14 3 10 #"txt-string"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 8 #"txt-size"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 9 #"txt-color"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 10 #"shapestate"
0 0 25 3 2 #" ["
0 0 14 3 10 #"shapescene"
0 0 25 3 1 #" "
0 0 14 3 4 #"end?"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";A ShapeState is a (make-shapestate ShapeScene Boolean)"
0 0 25 29 1 #"\n"
0 0 17 3 97
(23
 #";interp.: Info about a worldstate for the fun-shapes! function inclu"
 #"ding a ShapeScene and whether"
) 0 0 25 29 1 #"\n"
0 0 17 3 63
#";or not the program should end. To start the program, end? = #f"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-1"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-1"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-2"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-2"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-3"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"shapestate-3-END"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapescene-3"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";shapestate-templ: ShapeState -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"shapestate-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 21 #"shapestate-shapescene"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 15 #"shapestate-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";fun-shapes!: ShapeState -> ShapeState"
0 0 25 29 1 #"\n"
0 0 17 3 86
(24
 #";renders the ShapeScene ss in a world program and allows the user to"
 #" interact with it:"
) 0 0 25 29 1 #"\n"
0 0 17 3 64
#";- If the key l is pressed, the shapes rotate counter-clockwise."
0 0 25 29 1 #"\n"
0 0 17 3 56 #";- If the key r is pressed, the shapes rotate clockwise."
0 0 25 29 1 #"\n"
0 0 17 3 43 #";- If the key q is pressed, the world ends."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"fun-shapes!"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 13 #"draw-scene.v2"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 25 3 1 #" "
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 9 #"stop-when"
0 0 25 3 1 #" "
0 0 14 3 10 #"q-pressed?"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";draw-scene.v2: ShapeState -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 60
#";adaptation of draw-scene to work with the ShapeState struct"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"draw-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-1"
0 0 25 3 2 #") "
0 6           4 22 363 17 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"draw-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-2"
0 0 25 3 2 #") "
0 6           4 22 4242 18 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"draw-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 2 #") "
0 6           4 22 6322 19 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 13 #"draw-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 16 #"shapestate-3-END"
0 0 25 3 2 #") "
0 6           4 22 6322 19 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"draw-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"draw-scene"
0 0 25 3 2 #" ("
0 0 14 3 21 #"shapestate-shapescene"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";rotate-scene.v2 ShapeState Direction -> ShapeState"
0 0 25 29 1 #"\n"
0 0 17 3 55 #";adapts rotate-scene to work with the ShapeState Struct"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-1"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-1"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-2"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-2"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-3shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-4shape"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 45 #"                                            ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 12 #"rotate-scene"
0 0 25 3 2 #" ("
0 0 14 3 21 #"shapestate-shapescene"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #") "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 15 #"shapestate-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 83
(25
 #";move-w-key: ShapeState A-Key -> ShapeState     ;;I'm assuming A-Key"
 #" is a primitive"
) 0 0 25 29 1 #"\n"
0 0 17 3 46 #";rotates the scene ss based on key input a-key"
0 0 25 29 1 #"\n"
0 0 17 3 16 #";- l rotates ccw"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";- r rotates cw"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-1"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-1"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-2shape"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-2"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-3shape"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-2"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-3shape"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-4shape"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-4shape"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-4shape"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 5 #"#true"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 15 #"make-shapestate"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 11 #"make-4shape"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 3 #"red"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"make-circl"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 27 #"\"Does life have a meaning?\""
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 6 #"purple"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"make-txt"
0 0 25 3 1 #" "
0 0 19 3 15 #"\"Hello, world!\""
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 5 #"black"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"               "
0 0 22 3 6 #"#false"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"move-w-key"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"l\""
0 0 25 3 3 #") ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #" "
0 0 14 3 7 #"dir-ccw"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"r\""
0 0 25 3 3 #") ("
0 0 14 3 15 #"rotate-scene.v2"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #" "
0 0 14 3 6 #"dir-cw"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 25 3 3 #") ("
0 0 14 3 15 #"make-shapestate"
0 0 25 3 2 #" ("
0 0 14 3 21 #"shapestate-shapescene"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 44 #"                                            "
0 0 22 3 2 #"#t"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 34 #";q-pressed?: ShapeState -> Boolean"
0 0 25 29 1 #"\n"
0 0 17 3 96
(26
 #";determines whether or not the end? field of a given shapestate is #"
 #"t and returns the same value"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"q-pressed?"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-1"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"q-pressed?"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-2"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"q-pressed?"
0 0 25 3 1 #" "
0 0 14 3 12 #"shapestate-3"
0 0 25 3 2 #") "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"q-pressed?"
0 0 25 3 1 #" "
0 0 14 3 16 #"shapestate-3-END"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"q-pressed?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"shapestate-end?"
0 0 25 3 1 #" "
0 0 14 3 2 #"ss"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 2"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"date"
0 0 25 3 2 #" ["
0 0 14 3 4 #"year"
0 0 25 3 1 #" "
0 0 14 3 5 #"month"
0 0 25 3 1 #" "
0 0 14 3 3 #"day"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";A Date is a (make-date Natural Natural* Natural**)"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";- *The second field is a Natural in the range [1,12]"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";- **The third field is a Natural in the range [1,31]"
0 0 25 29 1 #"\n"
0 0 17 3 87
(27
 #";interp.: a (make-month y m d) is the d'th day of the m'th calendar "
 #"month in the year y"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"date-xmas"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2020"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"date-911"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2001"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"date-linux"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1970"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";date-templ: Date -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"date-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 9 #"date-year"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"date-month"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 8 #"date-day"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 4 #"time"
0 0 25 3 2 #" ["
0 0 14 3 4 #"hour"
0 0 25 3 1 #" "
0 0 14 3 6 #"minute"
0 0 25 3 1 #" "
0 0 14 3 6 #"second"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";A Time is a (make-time Natural* Natural** Natural***)"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";- *The first field is a Natural in the range [0,23]"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";- **The second field is a Natural in the range [0,59]"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";- ***The third field is a Natural in the range [0,59]"
0 0 25 29 1 #"\n"
0 0 17 3 95
(28
 #";interp.: a (make-time hr min sec) describes the time at hr hours, m"
 #"in minutes, and sec seconds"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"time-1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"45"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"time-2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"time-linux"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";time-templ: Time -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"time-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"time-second"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"date-time"
0 0 25 3 2 #" ["
0 0 14 3 4 #"date"
0 0 25 3 1 #" "
0 0 14 3 4 #"time"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";A DateTime is a (make-date-time Date Time)"
0 0 25 29 1 #"\n"
0 0 17 3 79
(29
 #";interp.: A (make-date-time d t) is an instance in time on the date "
 #"d at time t"
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 1 #" "
0 0 14 3 9 #"date-xmas"
0 0 25 3 1 #" "
0 0 14 3 6 #"time-1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 1 #" "
0 0 14 3 8 #"date-911"
0 0 25 3 1 #" "
0 0 14 3 6 #"time-2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 1 #" "
0 0 14 3 10 #"date-linux"
0 0 25 3 1 #" "
0 0 14 3 10 #"time-linux"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";dt-templ: DateTime -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"dt-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 10 #"date-templ"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-date"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"time-templ"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-time"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 2 #"))"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";format-date-time: DateTime -> String"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";formats a date-time as a pleasant-looking string"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"format-date-time"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 2 #") "
0 0 19 3 23 #"\"12/25/2020 12:30:45pm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"format-date-time"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-2"
0 0 25 3 2 #") "
0 0 19 3 23 #"\"09/11/2001 09:40:59pm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 16 #"format-date-time"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 2 #") "
0 0 19 3 23 #"\"01/01/1970 00:00:00am\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"format-date-time"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 14 3 9 #"date->str"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-date"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 19 3 3 #"\" \""
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"time->str"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-time"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";date->str: Date -> String"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";formats a single Date as a pleasant-looking string"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"date->str"
0 0 25 3 1 #" "
0 0 14 3 9 #"date-xmas"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"12/25/2020\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"date->str"
0 0 25 3 1 #" "
0 0 14 3 8 #"date-911"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"09/11/2001\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"date->str"
0 0 25 3 1 #" "
0 0 14 3 10 #"date-linux"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"01/01/1970\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"date->str"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 19 3 3 #"\"/\""
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 19 3 3 #"\"/\""
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";time->str: Time -> String"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";formats a single Time as a pleasant-looking string"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time->str"
0 0 25 3 1 #" "
0 0 14 3 6 #"time-1"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"12:30:45pm\""
0 0 25 3 2 #") "
0 0 17 3 50 #";there was no space in the example in the homework"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time->str"
0 0 25 3 1 #" "
0 0 14 3 6 #"time-2"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"09:40:59pm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time->str"
0 0 25 3 1 #" "
0 0 14 3 10 #"time-linux"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"00:00:00am\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time->str"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"23"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 3 #")) "
0 0 19 3 12 #"\"11:09:08pm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time->str"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"string-append"
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"12"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"12"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 53 #"                                                    ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 29 1 #"\n"
0 0 25 3 68
#"                                                                   ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 86
(30
 #"                                                                    "
 #"                  "
) 0 0 22 3 2 #"12"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 52 #"                                                   ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"12"
0 0 25 3 5 #"))])]"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                       [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 19 3 3 #"\":\""
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 19 3 3 #"\":\""
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #")))]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-second"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 4 #"))])"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 1 #"<"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 1 #" "
0 0 14 3 1 #"t"
0 0 25 3 2 #") "
0 0 22 3 2 #"12"
0 0 25 3 2 #") "
0 0 19 3 4 #"\"am\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"pm\""
0 0 25 3 4 #"])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #"; A TimeUnit is one of"
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; - \"second\""
0 0 25 29 1 #"\n"
0 0 17 3 12 #"; - \"minute\""
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; - \"hour\""
0 0 25 29 1 #"\n"
0 0 17 3 34 #";interp.: units of time on a clock"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"tu-sec"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"tu-min"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"minute\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"tu-hr"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"hour\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";tu-templ: TimeUnit -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"tu-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"tu"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tu"
0 0 25 3 1 #" "
0 0 14 3 6 #"tu-sec"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tu"
0 0 25 3 1 #" "
0 0 14 3 6 #"tu-min"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"tu"
0 0 25 3 1 #" "
0 0 14 3 5 #"tu-hr"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #"; A DateUnit is one of"
0 0 25 29 1 #"\n"
0 0 17 3 9 #"; - \"day\""
0 0 25 29 1 #"\n"
0 0 17 3 11 #"; - \"month\""
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; - \"year\""
0 0 25 29 1 #"\n"
0 0 17 3 37 #";interp.: units of time on a calendar"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-d"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-m"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-y"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";du-templ: DateUnit -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"du-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-d"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-m"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-y"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 10 #"time-delta"
0 0 25 3 2 #" ["
0 0 14 3 5 #"delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"tu"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";A TimeDelta is a (make-time-delta Real TimeUnit)"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";interp.: describes a time delta tu's in"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";- the future, delta > 0"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";- the past, delta < 0"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";- the present, delta = 0 (trivial case)"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"td-1"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 2 #"22"
0 0 25 3 1 #" "
0 0 14 3 6 #"tu-min"
0 0 25 3 3 #")) "
0 0 17 3 26 #";;22 minutes in the future"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"td-2"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 3 #"-12"
0 0 25 3 1 #" "
0 0 14 3 5 #"tu-hr"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"td-3"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 2 #"36"
0 0 25 3 1 #" "
0 0 14 3 6 #"tu-sec"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";td-templ: TimeDelta -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"td-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 16 #"time-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"time-delta-tu"
0 0 25 3 1 #" "
0 0 14 3 2 #"td"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 10 #"date-delta"
0 0 25 3 2 #" ["
0 0 14 3 5 #"delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";A DateDelta is a (make-date-delta Real DateUnit)"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";interp.: describes a time delta du's in"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";- the future, delta > 0"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";- the past, delta < 0"
0 0 25 29 1 #"\n"
0 0 17 3 40 #";- the present, delta = 0 (trivial case)"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"dd-1"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-m"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"dd-2"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-d"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"dd-3"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 4 #"-100"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";dd-templ: DateDelta -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"dd-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"dd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"..."
0 0 25 3 1 #"("
0 0 14 3 16 #"date-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"dd"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 13 #"date-delta-du"
0 0 25 3 1 #" "
0 0 14 3 2 #"dd"
0 0 25 3 1 #")"
0 0 14 3 3 #"..."
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #"; A RelativeTime is one of"
0 0 25 29 1 #"\n"
0 0 17 3 9 #"; - \"now\""
0 0 25 29 1 #"\n"
0 0 17 3 50 #"; - (make-time-delta Number TimeUnit) == DateDelta"
0 0 25 29 1 #"\n"
0 0 17 3 50 #"; - (make-date-delta Number DateUnit) == TimeDelta"
0 0 25 29 1 #"\n"
0 0 17 3 92
(31
 #";interp.: A description of a time or date in the future or past or p"
 #"resent, relative to now."
) 0 0 25 29 1 #"\n"
0 0 17 3 10 #";EXAMPLES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"rt-now"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"now\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"rt-+2hr"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 5 #"tu-hr"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 6 #"rt--3d"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 2 #"-3"
0 0 25 3 1 #" "
0 0 14 3 4 #"du-d"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";rt-templ: RelativeTime -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"rt-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 11 #"time-delta?"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #") ("
0 0 14 3 8 #"td-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 11 #"date-delta?"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #") ("
0 0 14 3 8 #"dd-templ"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 3 #"..."
0 0 25 3 4 #"])) "
0 0 17 3 78
(32
 #";we can be sure that rt = \"now\" here so I'm leaving the clause end"
 #"ing in \"...\""
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 45 #";adjust-dt: DateTime RelativeTime -> DateTime"
0 0 25 29 1 #"\n"
0 0 17 3 81
(33
 #";calculates a new DateTime, offset from the original DateTime by the"
 #" RelativeTime"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 1 #" "
0 0 14 3 6 #"rt-now"
0 0 25 3 3 #") ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2021"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"45"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 1 #" "
0 0 14 3 6 #"rt--3d"
0 0 25 3 3 #") ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1970"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"26"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 14 #"-1241341224534"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 6 #"-37940"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";examples from the HW website:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-2"
0 0 25 3 1 #" "
0 0 14 3 7 #"rt-+2hr"
0 0 25 3 3 #") ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2001"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"23"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"23"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 5 #"-1324"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1970"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"37"
0 0 25 3 1 #" "
0 0 22 3 2 #"56"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 2 #"-4"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1969"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1973"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"adjust-dt"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 3 #") ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"SEC/MINUTE"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/HOUR"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 10 #"SEC/MINUTE"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"SEC/DAY"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/HOUR"
0 0 25 3 1 #" "
0 0 22 3 2 #"24"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"SEC/MONTH"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 7 #"SEC/DAY"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/YEAR"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 9 #"SEC/MONTH"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 3 #")) "
0 0 17 3 67
#";This means that there are 360 days in a year, making sense because"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";                                   There are _30_ days in a month"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 14 #"SECONDS/MINUTE"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 2 #") "
0 0 17 3 72
(34
 #";I know that this is the same as the constant SEC/MIN, I just wrote "
 #"both"
) 0 0 25 29 1 #"\n"
0 0 17 3 90
(35
 #";                           and don't feel like changing my code tha"
 #"t uses different names"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"MINUTES/HOUR"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"HOURS/DAY"
0 0 25 3 1 #" "
0 0 22 3 2 #"24"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"DAYS/MONTH"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"MONTHS/YEAR"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";rt->sec: RelativeTime -> Integer"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";converts a RelativeTime into seconds"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 4 #"1234"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 25 3 3 #")) "
0 0 22 3 11 #"38382336000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 4 #"1234"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 25 3 3 #")) "
0 0 22 3 10 #"3198528000"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-date-delta"
0 0 25 3 1 #" "
0 0 22 3 4 #"1234"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 25 3 3 #")) "
0 0 22 3 9 #"106617600"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 4 #"1234"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"hour\""
0 0 25 3 3 #")) "
0 0 22 3 7 #"4442400"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 4 #"1234"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"minute\""
0 0 25 3 3 #")) "
0 0 22 3 5 #"74040"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 2 #" ("
0 0 14 3 15 #"make-time-delta"
0 0 25 3 1 #" "
0 0 22 3 4 #"1234"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"second\""
0 0 25 3 3 #")) "
0 0 22 3 4 #"1234"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"now\""
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rt->sec"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 11 #"date-delta?"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 13 #"date-delta-du"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"year\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/YEAR"
0 0 25 3 2 #" ("
0 0 14 3 16 #"date-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                [("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 13 #"date-delta-du"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"month\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 9 #"SEC/MONTH"
0 0 25 3 2 #" ("
0 0 14 3 16 #"date-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                [("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 13 #"date-delta-du"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #") "
0 0 19 3 5 #"\"day\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 7 #"SEC/DAY"
0 0 25 3 2 #" ("
0 0 14 3 16 #"date-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 5 #"))])]"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                                "
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 11 #"time-delta?"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 13 #"time-delta-tu"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #") "
0 0 19 3 6 #"\"hour\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/HOUR"
0 0 25 3 2 #" ("
0 0 14 3 16 #"time-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                [("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 13 #"time-delta-tu"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"minute\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 10 #"SEC/MINUTE"
0 0 25 3 2 #" ("
0 0 14 3 16 #"time-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 3 #"))]"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                [("
0 0 14 3 8 #"string=?"
0 0 25 3 2 #" ("
0 0 14 3 13 #"time-delta-tu"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 2 #") "
0 0 19 3 8 #"\"second\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 16 #"time-delta-delta"
0 0 25 3 1 #" "
0 0 14 3 2 #"rt"
0 0 25 3 4 #")])]"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 4 #"])) "
0 0 17 3 73
(36
 #";;its safe to assume rt == \"now\" by the definition of UNION: Relat"
 #"iveTime"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";dt->sec: DateTime -> Integer"
0 0 25 29 1 #"\n"
0 0 17 3 57 #";converts a DateTime into an equivalent number of seconds"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 2 #") "
0 0 22 3 11 #"61277558400"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 2 #") "
0 0 22 3 11 #"62863389045"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-2"
0 0 25 3 2 #") "
0 0 22 3 11 #"62263460459"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/YEAR"
0 0 25 3 2 #" ("
0 0 14 3 9 #"date-year"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-date"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 9 #"SEC/MONTH"
0 0 25 3 2 #" ("
0 0 14 3 10 #"date-month"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-date"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 7 #"SEC/DAY"
0 0 25 3 2 #" ("
0 0 14 3 8 #"date-day"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-date"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/HOUR"
0 0 25 3 2 #" ("
0 0 14 3 9 #"time-hour"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-time"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 10 #"SEC/MINUTE"
0 0 25 3 2 #" ("
0 0 14 3 11 #"time-minute"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-time"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 11 #"time-second"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-time"
0 0 25 3 1 #" "
0 0 14 3 2 #"dt"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";sec->dt: Integer -> DateTime"
0 0 25 29 1 #"\n"
0 0 17 3 54 #";converts an arbitrary number of seconds to a DateTime"
0 0 25 29 1 #"\n"
0 0 17 3 62
#";NOTE: Racket rounds large values (which have to be used here)"
0 0 25 29 1 #"\n"
0 0 17 3 75
(37
 #";also, there are 30 days in a month and 360 days in a year in this p"
 #"roblem,"
) 0 0 25 29 1 #"\n"
0 0 17 3 4 #"; so"
0 0 17 3 1 #" "
0 0 17 3 9 #"therefore"
0 0 17 3 1 #" "
0 0 17 3 19 #"a check-expect like"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 67
#";              (check-expect (sec->dt (dt->sec dt-linux)) dt-linux)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 91
(38
 #";will not be exactly correct. Although sec->dt and dt->sec are inver"
 #"se functions in design,"
) 0 0 25 29 1 #"\n"
0 0 17 3 85
(39
 #"; (sec->dt (dt->sec sec)) != sec, but (sec->dt (dt->sec sec)) is app"
 #"rox. equal to sec"
) 0 0 25 29 1 #"\n"
0 0 17 3 97
(40
 #";for that reason, I will compose my check-expects with (sec->dt (dt-"
 #">sec sec)) != sec and instead"
) 0 0 25 29 1 #"\n"
0 0 17 3 50 #";use the precise result of (sec->dt (dt->sec sec))"
0 0 25 29 1 #"\n"
0 0 17 3 79
(41
 #";I will also include a readable and a \"simplified\" version of each"
 #" check-expect"
) 0 0 25 29 1 #"\n"
0 0 17 3 101
(42
 #";This took me 12.5 hours I hope it's somewhat correct; I worked real"
 #"ly hard on it and the math checks"
) 0 0 25 29 1 #"\n"
0 0 17 3 59
#";out, I tested it with a ton of different examples by hand "
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1970"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 1 #" "
0 0 22 3 11 #"61277558400"
0 0 25 3 3 #") ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"1970"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2021"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"45"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 1 #" "
0 0 22 3 11 #"62863389045"
0 0 25 3 3 #") ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2021"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 22 3 2 #"21"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"19"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 22 3 2 #"45"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-2"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2001"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"23"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 1 #" "
0 0 22 3 11 #"62263460459"
0 0 25 3 3 #") ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2001"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"23"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sec->dt"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 2 #") "
0 0 17 3 64
#";I noticed that theres a recurring pattern here. Can I simplify?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 14 #"make-date-time"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"make-date"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 1 #" "
0 0 14 3 8 #"SEC/YEAR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"modulo"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 1 #" "
0 0 14 3 12 #"MINUTES/HOUR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 52 #"                                                    "
0 0 14 3 9 #"HOURS/DAY"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 42 #"                                          "
0 0 14 3 10 #"DAYS/MONTH"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                                "
0 0 14 3 11 #"MONTHS/YEAR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 14 3 11 #"MONTHS/YEAR"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"modulo"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 1 #" "
0 0 14 3 12 #"MINUTES/HOUR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 42 #"                                          "
0 0 14 3 9 #"HOURS/DAY"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                                "
0 0 14 3 10 #"DAYS/MONTH"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 14 3 10 #"DAYS/MONTH"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 9 #"make-time"
0 0 25 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 1 #" "
0 0 14 3 12 #"MINUTES/HOUR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                                "
0 0 14 3 9 #"HOURS/DAY"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 14 3 9 #"HOURS/DAY"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"modulo"
0 0 25 3 2 #" ("
0 0 14 3 5 #"floor"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 1 #" "
0 0 14 3 12 #"MINUTES/HOUR"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                      "
0 0 14 3 12 #"MINUTES/HOUR"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"modulo"
0 0 25 3 1 #" "
0 0 14 3 3 #"sec"
0 0 25 3 1 #" "
0 0 14 3 10 #"SEC/MINUTE"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T1"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2020"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"49"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-date-time"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-date"
0 0 25 3 1 #" "
0 0 22 3 4 #"2021"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-time"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"49"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 17 3 51 #";date-time-diff: DateTime DateTime DateUnit -> Real"
0 0 25 29 1 #"\n"
0 0 17 3 79
(43
 #";calculates the absolute difference between two DateTimes in the giv"
 #"en DateUnit"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T1"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T2"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T1"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T2"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 25 3 2 #") "
0 0 22 3 2 #"12"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T1"
0 0 25 3 1 #" "
0 0 14 3 5 #"DT-T2"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 25 3 2 #") "
0 0 22 3 3 #"360"
0 0 25 3 2 #") "
0 0 17 3 46 #";;there are 360 days in a year (30 days/month)"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 25 3 2 #") "
0 8          10 22 16 #"35240681/691200\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 25 3 2 #") "
0 8          10 22 15 #"35240681/57600\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 25 3 1 #" "
0 0 14 3 8 #"dt-linux"
0 0 25 3 1 #" "
0 0 14 3 4 #"dt-1"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 25 3 2 #") "
0 8          10 22 14 #"35240681/1920\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"date-time-diff"
0 0 25 3 1 #" "
0 0 14 3 3 #"dt1"
0 0 25 3 1 #" "
0 0 14 3 3 #"dt2"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 3 #"dt1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"dt->sec"
0 0 25 3 1 #" "
0 0 14 3 3 #"dt2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"year\""
0 0 25 3 2 #") "
0 0 14 3 8 #"SEC/YEAR"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"month\""
0 0 25 3 2 #") "
0 0 14 3 9 #"SEC/MONTH"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 2 #"du"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"day\""
0 0 25 3 2 #") "
0 0 14 3 7 #"SEC/DAY"
0 0 25 3 4 #"])))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"            "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 11 #";Exercise 3"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";A FSMState is one of:"
0 0 25 29 1 #"\n"
0 0 17 3 10 #";- \"START\""
0 0 25 29 1 #"\n"
0 0 17 3 48
#";          haven\342\200\231t seen any part of \"good\" yet"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"G\""
0 0 25 29 1 #"\n"
0 0 17 3 35 #";          have seen the intial \"g\""
0 0 25 29 1 #"\n"
0 0 17 3 7 #";- \"01\""
0 0 25 29 1 #"\n"
0 0 17 3 37 #";          have seen at least one \"o\""
0 0 25 29 1 #"\n"
0 0 17 3 7 #";- \"02\""
0 0 25 29 1 #"\n"
0 0 17 3 38 #";          have seen at least two \"o\"s"
0 0 25 29 1 #"\n"
0 0 17 3 6 #";- \"D\""
0 0 25 29 1 #"\n"
0 0 17 3 34 #";          have seen the final \"d\""
0 0 25 29 1 #"\n"
0 0 17 3 64
#";interp.: descriptions of states in a Finite State Machine (FSM)"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";EXAMPLES - ALL STATES:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"START\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"G\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"01\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #" "
0 0 19 3 4 #"\"02\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";state-templ: FSMState -> ???"
0 0 25 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"state-templ"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"          [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 2 #") "
0 0 14 3 3 #"..."
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";fsm: FSMState -> FSMState"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";renders the finite state machine described above"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 3 #"fsm"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 7 #"to-draw"
0 0 25 3 1 #" "
0 0 14 3 10 #"draw-state"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 6 #"on-key"
0 0 25 3 1 #" "
0 0 14 3 12 #"change-state"
0 0 25 3 3 #"]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";draw-state: FSMState -> Image"
0 0 25 29 1 #"\n"
0 0 17 3 64
#";draws the color of rectangle corresponding to the current state"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-state"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 2 #") "
0 6           4 22 233
(44
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point "
 #"0 0 200 150 0 0) #(struct:pulled-point 0 0 0 150 0 0)) 255 \"white\""
 #")) #(struct:bb 200 150 150) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 2 #") "
0 6           4 22 238
(45
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point "
 #"0 0 200 150 0 0) #(struct:pulled-point 0 0 0 150 0 0)) 255 \"pale gr"
 #"een\")) #(struct:bb 200 150 150) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 2 #") "
0 6           4 22 240
(46
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point "
 #"0 0 200 150 0 0) #(struct:pulled-point 0 0 0 150 0 0)) 255 \"spring "
 #"green\")) #(struct:bb 200 150 150) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 2 #") "
0 6           4 22 238
(47
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point "
 #"0 0 200 150 0 0) #(struct:pulled-point 0 0 0 150 0 0)) 255 \"lime gr"
 #"een\")) #(struct:bb 200 150 150) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 2 #") "
0 6           4 22 238
(48
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 200 0 0 0) #(struct:pulled-point "
 #"0 0 200 150 0 0) #(struct:pulled-point 0 0 0 150 0 0)) 255 \"dark gr"
 #"een\")) #(struct:bb 200 150 150) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"draw-state"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"150"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"white\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                   [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"pale green\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                   [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 2 #") "
0 0 19 3 14 #"\"spring green\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                   [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"lime green\""
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                   [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 2 #") "
0 0 19 3 12 #"\"dark green\""
0 0 25 3 4 #"])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";change-state: FSMState KeyEvent -> FSMState"
0 0 25 29 1 #"\n"
0 0 17 3 66
#";changes the current state of the world according to the FSM rules"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"e\""
0 0 25 3 2 #") "
0 0 14 3 11 #"state-START"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 25 3 2 #") "
0 0 14 3 8 #"state-01"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"k\""
0 0 25 3 2 #") "
0 0 14 3 11 #"state-START"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 25 3 2 #") "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 25 3 2 #") "
0 0 14 3 11 #"state-START"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 25 3 2 #") "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"q\""
0 0 25 3 2 #") "
0 0 14 3 11 #"state-START"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"8\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"change-state"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 3 #"])]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-G"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 25 3 2 #") "
0 0 14 3 8 #"state-01"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                    [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 3 #"])]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-01"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 25 3 2 #") "
0 0 14 3 8 #"state-02"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                     [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 3 #"])]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 8 #"state-02"
0 0 25 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"d\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-D"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                     [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"o\""
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                     [("
0 0 14 3 5 #"key=?"
0 0 25 3 1 #" "
0 0 14 3 5 #"a-key"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"g\""
0 0 25 3 2 #") "
0 0 14 3 7 #"state-G"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                     ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 11 #"state-START"
0 0 25 3 3 #"])]"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        [("
0 0 14 3 8 #"string=?"
0 0 25 3 1 #" "
0 0 14 3 1 #"s"
0 0 25 3 1 #" "
0 0 14 3 7 #"state-D"
0 0 25 3 2 #") "
0 0 14 3 1 #"s"
0 0 25 3 3 #"]))"
0           0
